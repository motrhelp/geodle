{"version":3,"file":"static/js/main.9f00136c.js","mappings":"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","sources":["components/Hearts.js","data/CountryList.js","util/GameNumber.js","util/DataStorage.js","components/GameOver.js","util/AppVersion.js","util/Navigation.js","components/ExtraHearts.js","components/Header.js","screens/GuessCapitalScreen.js","components/Flag.js","components/Guesses.js","components/Autocomplete.js","util/DistanceCalculator.js","data/Hints.js","components/GuessFlag.js","screens/GuessFlagScreen.js","screens/GuessShapeScreen.js","screens/BonusLevelScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { Image, StyleSheet, TouchableOpacity } from 'react-native';\n\nimport heart from '../img/heart.png';\nimport lostHeart from '../img/lostHeart.png';\n\nexport const maxHearts = 6;\n\nexport default function Hearts({ hearts, onPressHearts }) {\n    return (\n        <TouchableOpacity onPress={onPressHearts}\n            style={styles.heartsContainer}>\n\n            <Image\n                style={styles.heartImage}\n                source={hearts > 0 ? heart : lostHeart}\n            />\n            <Image\n                style={styles.heartImage}\n                source={hearts > 1 ? heart : lostHeart}\n            />\n            <Image\n                style={styles.heartImage}\n                source={hearts > 2 ? heart : lostHeart}\n            />\n            <Image\n                style={styles.heartImage}\n                source={hearts > 3 ? heart : lostHeart}\n            />\n            <Image\n                style={styles.heartImage}\n                source={hearts > 4 ? heart : lostHeart}\n            />\n            <Image\n                style={styles.heartImage}\n                source={hearts > 5 ? heart : lostHeart}\n            />\n        </TouchableOpacity>\n    );\n}\n\nconst styles = StyleSheet.create({\n    heartsContainer: {\n        flex: 1,\n        alignSelf: 'center',\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        marginTop: 20,\n        minWidth: 250,\n        minHeight: 50,\n    },\n    heartImage: {\n        flex: 1,\n        maxHeight: 25,\n        maxWidth: 25,\n        aspectRatio: 512 / 512\n    },\n\n});\n","export const countryList = [\n    { code: \"AF\", name: \"Afghanistan\", lat: 33.93911, lon: 67.709953, shape: require(\"../img/afghanistan.png\") },\n    // { code: \"AX\", name: \"\\u00c5land Islands\" },\n    { code: \"AL\", name: \"Albania\", lat: 41.153332, lon: 20.168331, flag: require(\"../img/512px-Flag_of_Albania.png\"), flagAspectRatio: 1.4, emoji: \"🇦🇱\", capital: { name: \"Tirana\" }, shape: require(\"../img/albania.png\") },\n    { code: \"DZ\", name: \"Algeria\", lat: 28.033886, lon: 1.659626, flag: require(\"../img/Flag_of_Algeria.png\"), emoji: \"🇩🇿\", capital: { name: \"Algiers\" }, shape: require(\"../img/algeria.png\") },\n    { code: \"AS\", name: \"American Samoa\", lat: -14.270972, lon: -170.132217, flag: require(\"../img/640px-Flag_of_American_Samoa.svg.png\"), flagAspectRatio: 2, capital: { name: \"Pago Pago\" } },\n    { code: \"AD\", name: \"Andorra\", lat: 42.546245, lon: 1.601554, flag: require(\"../img/Flag_of_Andorra.svg.png\"), flagAspectRatio: 1.429, emoji: \"🇦🇩\", capital: { name: \"Andorra la Vella\" }, shape: require(\"../img/andorra.png\") },\n    { code: \"AO\", name: \"Angola\", lat: -11.202692, lon: 17.873887, flag: require(\"../img/Flag_of_Angola.png\"), capital: { name: \"Luanda\" }, shape: require(\"../img/angola.png\") },\n    { code: \"AI\", name: \"Anguilla\", lat: 18.220554, lon: -63.068615, flag: require(\"../img/Flag_of_Anguilla.svg.png\"), flagAspectRatio: 2, capital: { name: \"The Valley\" } },\n    { code: \"AQ\", name: \"Antarctica\", lat: -75.250973, lon: -0.071389, emoji: \"🇦🇶\" },\n    { code: \"AG\", name: \"Antigua and Barbuda\", lat: 17.060816, lon: -61.796428, flag: require(\"../img/Flag_of_Antigua_and_Barbuda.svg.png\"), capital: { name: \"Saint John's\" }, shape: require(\"../img/antigua-and-barbuda.png\") },\n    { code: \"AR\", name: \"Argentina\", lat: -38.416097, lon: -63.616672, flag: require(\"../img/Flag_of_Argentina.png\"), flagAspectRatio: 1.6, capital: { name: \"Buenos Aires\" }, shape: require(\"../img/argentina.png\") },\n    { code: \"AM\", name: \"Armenia\", lat: 40.069099, lon: 45.038189, flag: require(\"../img/Flag_of_Armenia.png\"), flagAspectRatio: 2, capital: { name: \"Yerevan\" }, shape: require(\"../img/armenia.png\") },\n    { code: \"AW\", name: \"Aruba\", lat: 12.52111, lon: -69.968338, flag: require(\"../img/Flag_of_Aruba.svg.png\"), capital: { name: \"Oranjestad\" }, shape: require(\"../img/aruba.png\") },\n    { code: \"AU\", name: \"Australia\", lat: -25.274398, lon: 133.775136, flag: require(\"../img/Flag_of_Australia_(converted).png\"), flagAspectRatio: 2, capital: { name: \"Canberra\" }, shape: require(\"../img/australia.png\") },\n    { code: \"AT\", name: \"Austria\", lat: 47.516231, lon: 14.550072, flag: require(\"../img/Flag_of_Austria.png\"), capital: { name: \"Vienna\" }, shape: require(\"../img/austria.png\") },\n    { code: \"AZ\", name: \"Azerbaijan\", lat: 40.143105, lon: 47.576927, flag: require(\"../img/Flag_of_Azerbaijan.svg.png\"), flagAspectRatio: 2, capital: { name: \"Baku\" }, shape: require(\"../img/azerbaijan.png\") },\n    { code: \"BS\", name: \"Bahamas\", lat: 25.03428, lon: -77.39628, flag: require(\"../img/Flag_of_the_Bahamas.svg.png\"), flagAspectRatio: 2, capital: { name: \"Nassau\" }, shape: require(\"../img/bahamas.png\") },\n    { code: \"BH\", name: \"Bahrain\", lat: 25.930414, lon: 50.637772, flag: require(\"../img/Flag_of_Bahrain.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Manama\" }, shape: require(\"../img/bahrain.png\") },\n    { code: \"BD\", name: \"Bangladesh\", lat: 23.684994, lon: 90.356331, flag: require(\"../img/Flag_of_Bangladesh.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Dhaka\" }, shape: require(\"../img/bangladesh.png\") },\n    { code: \"BB\", name: \"Barbados\", lat: 13.193887, lon: -59.543198, flag: require(\"../img/Flag_of_Barbados.svg.png\"), capital: { name: \"Bridgetown\" }, shape: require(\"../img/barbados.png\") },\n    { code: \"BY\", name: \"Belarus\", lat: 53.709807, lon: 27.953389, flag: require(\"../img/Flag_of_Belarus.png\"), flagAspectRatio: 2, capital: { name: \"Minsk\" }, shape: require(\"../img/belarus.png\") },\n    { code: \"BE\", name: \"Belgium\", lat: 50.503887, lon: 4.469936, flag: require(\"../img/Flag_of_Belgium.png\"), flagAspectRatio: 1.154, capital: { name: \"Brussels\" }, shape: require(\"../img/belgium.png\") },\n    { code: \"BZ\", name: \"Belize\", lat: 17.189877, lon: -88.49765, flag: require(\"../img/Flag_of_Belize.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Belmopan\" }, shape: require(\"../img/belize.png\") },\n    { code: \"BJ\", name: \"Benin\", lat: 9.30769, lon: 2.315834, flag: require(\"../img/Flag_of_Benin.svg.png\"), capital: { name: \"Porto Novo\" }, shape: require(\"../img/benin.png\") },\n    { code: \"BM\", name: \"Bermuda\", lat: 32.321384, lon: -64.75737, flag: require(\"../img/Flag_of_Bermuda.svg.png\"), flagAspectRatio: 2, capital: { name: \"Hamilton\" }, shape: require(\"../img/bermuda.png\") },\n    { code: \"BT\", name: \"Bhutan\", lat: 27.514162, lon: 90.433601, flag: require(\"../img/Flag_of_Bhutan.svg.png\"), capital: { name: \"Thimphu\" }, shape: require(\"../img/bhutan.png\") },\n    { code: \"BO\", name: \"Bolivia\", lat: -16.290154, lon: -63.588653, flag: require(\"../img/Flag_of_Bolivia.svg.png\"), flagAspectRatio: 1.467, capital: { name: \"Sucre\" }, shape: require(\"../img/bolivia.png\") },\n    // { code: \"BQ\", name: \"Bonaire, Sint Eustatius and Saba\" },\n    { code: \"BA\", name: \"Bosnia and Herzegovina\", lat: 43.915886, lon: 17.679076, flag: require(\"../img/640px-Flag_of_Bosnia_and_Herzegovina.svg.png\"), flagAspectRatio: 2, capital: { name: \"Sarajevo\" }, shape: require(\"../img/bosnia-and-herzegovina.png\") },\n    { code: \"BW\", name: \"Botswana\", lat: -22.328474, lon: 24.684866, flag: require(\"../img/Flag_of_Botswana.svg.png\"), capital: { name: \"Gaborone\" }, shape: require(\"../img/botswana.png\") },\n    // { code: \"BV\", name: \"Bouvet Island\", lat: -54.423199, lon: 3.413194 },\n    { code: \"BR\", name: \"Brazil\", lat: -14.235004, lon: -51.92528, flag: require(\"../img/640px-Flag_of_Brazil.png\"), flagAspectRatio: 1.429, capital: { name: \"Brasilia\" }, shape: require(\"../img/brazil.png\") },\n    // { code: \"IO\", name: \"British Indian Ocean Territory\", lat: -6.343194, lon: 71.876519 },\n    { code: \"BN\", name: \"Brunei\", lat: 4.535277, lon: 114.727669, flag: require(\"../img/Flag_of_Brunei.svg.png\"), flagAspectRatio: 2, capital: { name: \"Bandar Seri Begawan\" }, shape: require(\"../img/brunei.png\") },\n    { code: \"BG\", name: \"Bulgaria\", lat: 42.733883, lon: 25.48583, flag: require(\"../img/Flag_of_Bulgaria.png\"), flagAspectRatio: 1.667, capital: { name: \"Sofia\" }, shape: require(\"../img/bulgaria.png\") },\n    { code: \"BF\", name: \"Burkina Faso\", lat: 12.238333, lon: -1.561593, flag: require(\"../img/Flag_of_Burkina_Faso.svg.png\"), capital: { name: \"Ouagadougou\" }, shape: require(\"../img/burkina-faso.png\") },\n    { code: \"BI\", name: \"Burundi\", lat: 3.373056, lon: 29.918886, flag: require(\"../img/Flag_of_Burundi.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Gitega\" }, shape: require(\"../img/burundi.png\") },\n    { code: \"KH\", name: \"Cambodia\", lat: 12.565679, lon: 104.990963, flag: require(\"../img/640px-Flag_of_Cambodia.svg.png\"), flagAspectRatio: 1.563, capital: { name: \"Phnom Penh\" }, shape: require(\"../img/cambodia.png\") },\n    { code: \"CM\", name: \"Cameroon\", flag: require(\"../img/Flag_of_Cameroon.png\"), lat: 7.369722, lon: 12.354722, capital: { name: \"Yaounde\" }, shape: require(\"../img/cameroon.png\") },\n    { code: \"CA\", name: \"Canada\", lat: 56.130366, lon: -106.346771, flag: require(\"../img/Flag_of_Canada.svg.png\"), flagAspectRatio: 2, capital: { name: \"Ottawa\" }, shape: require(\"../img/canada.png\") },\n    { code: \"CV\", name: \"Cape Verde (Cabo Verde)\", lat: 16.002082, lon: -24.013197, flag: require(\"../img/640px-Flag_of_Cape_Verde.svg.png\"), flagAspectRatio: 1.7, capital: { name: \"Praia\" }, shape: require(\"../img/cape-verde.png\") },\n    { code: \"KY\", name: \"Cayman Islands\", lat: 19.513469, lon: -80.566956, flag: require(\"../img/Flag_of_the_Cayman_Islands.svg.png\"), flagAspectRatio: 2, capital: { name: \"George Town\" } },\n    { code: \"CF\", name: \"Central African Republic\", lat: 6.611111, lon: 20.939444, flag: require(\"../img/Flag_of_the_Central_African_Republic.svg.png\"), capital: { name: \"Bangui\" }, shape: require(\"../img/central-african-republic.png\") },\n    { code: \"TD\", name: \"Chad\", lat: 15.454166, lon: 18.732207, flag: require(\"../img/640px-Flag_of_Chad.svg.png\"), capital: { name: \"N'Djamena\" }, shape: require(\"../img/chad.png\") },\n    { code: \"CL\", name: \"Chile\", lat: -35.675147, lon: -71.542969, flag: require(\"../img/Flag_of_Chile.svg.png\"), capital: { name: \"Santiago\" }, shape: require(\"../img/chile.png\") },\n    { code: \"CN\", name: \"China\", lat: 35.86166, lon: 104.195397, flag: require(\"../img/Flag_of_the_People's_Republic_of_China.png\"), capital: { name: \"Beijing\" }, shape: require(\"../img/china.png\") },\n    { code: \"CX\", name: \"Christmas Island\", flag: require(\"../img/Flag_of_Christmas_Island.png\"), flagAspectRatio: 2, lat: -10.447525, lon: 105.690449, capital: { name: \"Flying Fish Cove\" } },\n    { code: \"CC\", name: \"Cocos (Keeling) Islands\", flag: require(\"../img/320px-Flag_of_the_Cocos_(Keeling)_Islands.png\"), flagAspectRatio: 2, lat: -12.164165, lon: 96.870956, capital: { name: \"West Islands\" } },\n    { code: \"CO\", name: \"Colombia\", lat: 4.570868, lon: -74.297333, flag: require(\"../img/Flag_of_Colombia.svg.png\"), capital: { name: \"Bogota\" }, shape: require(\"../img/colombia.png\") },\n    { code: \"KM\", name: \"Comoros\", flag: require(\"../img/Flag_of_the_Comoros.png\"), lat: -11.875001, lon: 43.872219, flagAspectRatio: 1.667, capital: { name: \"Moroni\" }, shape: require(\"../img/comoros.png\") },\n    { code: \"CG\", name: \"Congo\", lat: -0.228021, lon: 15.827659, flag: require(\"../img/640px-Flag_of_Congo_Free_State.svg.png\"), capital: { name: \"Brazzaville\" }, shape: require(\"../img/republic-of-the-congo.png\") },\n    { code: \"CD\", name: \"Congo, the Democratic Republic of the\", lat: -4.038333, lon: 21.758664, flagAspectRatio: 1.333, flag: require(\"../img/640px-Flag_of_the_Democratic_Republic_of_the_Congo.svg.png\"), capital: { name: \"Kinshasa\" }, shape: require(\"../img/democratic-republic-of-the-congo.png\") },\n    { code: \"CK\", name: \"Cook Islands\", flag: require(\"../img/320px-Flag_of_the_Cook_Islands.png\"), flagAspectRatio: 2, lat: -21.236736, lon: -159.777671, capital: { name: \"Avarua District\" } },\n    { code: \"CR\", name: \"Costa Rica\", lat: 9.748917, lon: -83.753428, flag: require(\"../img/320px-Flag_of_Costa_Rica.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"San Jose\" }, shape: require(\"../img/costa-rica.png\") },\n    { code: \"CI\", name: \"Cote d'Ivoire (Ivory Coast)\", lat: 7.539989, lon: -5.54708, flag: require(\"../img/Flag_of_Cote_d'Ivoire.svg.png\"), capital: { name: \"Yamoussoukro\" }, shape: require(\"../img/ivory-coast.png\") },\n    { code: \"HR\", name: \"Croatia\", lat: 45.1, lon: 15.2, flag: require(\"../img/Flag_of_Croatia.png\"), flagAspectRatio: 2, capital: { name: \"Zagreb\" }, shape: require(\"../img/croatia.png\") },\n    { code: \"CU\", name: \"Cuba\", lat: 21.521757, lon: -77.781167, flag: require(\"../img/Flag_of_Cuba.svg.png\"), flagAspectRatio: 2, capital: { name: \"Havana\" }, shape: require(\"../img/cuba.png\") },\n    // { code: \"CW\", name: \"Cura\\u00e7ao\" },\n    { code: \"CY\", name: \"Cyprus\", lat: 35.126413, lon: 33.429859, flag: require(\"../img/640px-Flag_of_Cyprus.svg.png\"), capital: { name: \"Nicosia\" }, shape: require(\"../img/cyprus.png\") },\n    { code: \"CZ\", name: \"Czech Republic\", lat: 49.817492, lon: 15.472962, flag: require(\"../img/Flag_of_the_Czech_Republic.png\"), capital: { name: \"Prague\" }, shape: require(\"../img/czech-republic.png\") },\n    { code: \"DK\", name: \"Denmark\", lat: 56.26392, lon: 9.501785, flag: require(\"../img/Flag_of_Denmark.png\"), flagAspectRatio: 1.321, capital: { name: \"Copenhagen\" }, shape: require(\"../img/denmark.png\") },\n    { code: \"DJ\", name: \"Djibouti\", flag: require(\"../img/Flag_of_Djibouti.png\"), capital: { name: \"Djibouti City\" }, lat: 11.825138, lon: 42.590275 },\n    { code: \"DM\", name: \"Dominica\", flag: require(\"../img/Flag_of_Dominica.png\"), flagAspectRatio: 2, capital: { name: \"Roseau\" }, lat: 15.414999, lon: -61.370976 },\n    { code: \"DO\", name: \"Dominican Republic\", lat: 18.735693, lon: -70.162651, flag: require(\"../img/Flag_of_the_Dominican_Republic.svg.png\"), flagAspectRatio: 1.6, capital: { name: \"Santo Domingo\" }, shape: require(\"../img/dominican-republic.png\") },\n    { code: \"EC\", name: \"Ecuador\", lat: -1.831239, lon: -78.183406, flag: require(\"../img/640px-Flag_of_Ecuador.svg.png\"), capital: { name: \"Quito\" }, shape: require(\"../img/ecuador.png\") },\n    { code: \"EG\", name: \"Egypt\", lat: 26.820553, lon: 30.802498, flag: require(\"../img/Flag_of_Egypt.png\"), capital: { name: \"Cairo\" }, shape: require(\"../img/egypt.png\") },\n    { code: \"SV\", name: \"El Salvador\", lat: 13.794185, lon: -88.89653, flag: require(\"../img/Flag_of_El_Salvador.svg.png\"), flagAspectRatio: 1.772, capital: { name: \"San Salvador\" }, shape: require(\"../img/el-salvador.png\") },\n    { code: \"GQ\", name: \"Equatorial Guinea\", lat: 1.650801, lon: 10.267895, flag: require(\"../img/Flag_of_Equatorial_Guinea.svg.png\"), capital: { name: \"Malabo\" }, shape: require(\"../img/equatorial-guinea.png\") },\n    { code: \"ER\", name: \"Eritrea\", lat: 15.179384, lon: 39.782334, flag: require(\"../img/Flag_of_Eritrea.svg.png\"), flagAspectRatio: 2, capital: { name: \"Asmara\" }, shape: require(\"../img/eritrea.png\") },\n    { code: \"EE\", name: \"Estonia\", lat: 58.595272, lon: 25.013607, flag: require(\"../img/640px-Flag_of_Estonia.png\"), flagAspectRatio: 1.571, capital: { name: \"Tallinn\" }, shape: require(\"../img/estonia.png\") },\n    { code: \"ET\", name: \"Ethiopia\", lat: 9.145, lon: 40.489673, flag: require(\"../img/Flag_of_Ethiopia.svg.png\"), flagAspectRatio: 2, capital: { name: \"Addis Ababa\" }, shape: require(\"../img/ethiopia.png\") },\n    { code: \"FK\", name: \"Falkland Islands (Malvinas)\", flag: require(\"../img/320px-Flag_of_Falkland_Islands_Islas_Malvinas.jpeg\"), flagAspectRatio: 2, lat: -51.796253, lon: -59.523613, capital: { name: \"Stanley\" } },\n    { code: \"FO\", name: \"Faroe Islands\", lat: 61.892635, lon: -6.911806, flag: require(\"../img/Flag_of_the_Faroe_Islands.svg.png\"), flagAspectRatio: 1.375, capital: { name: \"Torshavn\" } },\n    { code: \"FJ\", name: \"Fiji\", lat: -16.578193, lon: 179.414413, flag: require(\"../img/Flag_of_Fiji.svg.png\"), flagAspectRatio: 2, capital: { name: \"Suva\" } },\n    { code: \"FI\", name: \"Finland\", lat: 61.92411, lon: 25.748151, flag: require(\"../img/Flag_of_Finland.png\"), flagAspectRatio: 1.636, capital: { name: \"Helsinki\" }, shape: require(\"../img/finland.png\") },\n    { code: \"FR\", name: \"France\", lat: 46.227638, lon: 2.213749, flag: require(\"../img/Flag_of_France.png\"), capital: { name: \"Paris\" }, shape: require(\"../img/france.png\") },\n    { code: \"GF\", name: \"French Guiana\", flag: require(\"../img/320px-Flag_of_French_Guiana.png\"), lat: 3.933889, lon: -53.125782, capital: { name: \"Cayenne\" } },\n    { code: \"PF\", name: \"French Polynesia\", lat: -17.679742, lon: -149.406843, flag: require(\"../img/Flag_of_French_Polynesia.svg.png\"), capital: { name: \"Papeete\" } },\n    // { code: \"TF\", name: \"French Southern Territories\", lat: -49.280366, lon: 69.348557 },\n    { code: \"GA\", name: \"Gabon\", lat: -0.803689, lon: 11.609444, flag: require(\"../img/Flag_of_Gabon.svg.png\"), flagAspectRatio: 1.333, capital: { name: \"Liberville\" }, shape: require(\"../img/gabon.png\") },\n    { code: \"GM\", name: \"Gambia\", lat: 13.443182, lon: -15.310139, flag: require(\"../img/Flag_of_The_Gambia.svg.png\"), capital: { name: \"Banjul\" }, shape: require(\"../img/gambia.png\") },\n    { code: \"GE\", name: \"Georgia\", lat: 42.315407, lon: 43.356892, flag: require(\"../img/Flag_of_Georgia.png\"), capital: { name: \"Tbilisi\" }, shape: require(\"../img/georgia.png\") },\n    { code: \"DE\", name: \"Germany\", lat: 51.165691, lon: 10.451526, flag: require(\"../img/320px-Flag_of_Germany.png\"), flagAspectRatio: 1.667, capital: { name: \"Berlin\" }, shape: require(\"../img/germany.png\") },\n    { code: \"GH\", name: \"Ghana\", lat: 7.946527, lon: -1.023194, flag: require(\"../img/640px-Flag_of_Ghana.svg.png\"), capital: { name: \"Accra\", icon: require(\"../img/accra.png\"), shape: require(\"../img/ghana.png\") } },\n    { code: \"GI\", name: \"Gibraltar\", lat: 36.137741, lon: -5.345374, flag: require(\"../img/640px-Flag_of_Gibraltar.png\"), flagAspectRatio: 2, capital: { name: \"Gibraltar\" } },\n    { code: \"GR\", name: \"Greece\", lat: 39.074208, lon: 21.824312, flag: require(\"../img/Flag_of_Greece.png\"), capital: { name: \"Athens\" }, shape: require(\"../img/greece.png\") },\n    { code: \"GL\", name: \"Greenland\", lat: 71.706936, lon: -42.604303, flag: require(\"../img/Flag_of_Greenland.png\"), capital: { name: \"Nuuk\" }, shape: require(\"../img/greenland.png\") },\n    { code: \"GD\", name: \"Grenada\", lat: 12.262776, lon: -61.604171, flag: require(\"../img/Flag_of_Grenada.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Saint George\" }, shape: require(\"../img/grenada.png\") },\n    { code: \"GP\", name: \"Guadeloupe\", flag: require(\"../img/320px-Flag_of_Guadeloupe_(UPLG).svg.png\"), lat: 16.995971, lon: -62.067641, capital: { name: \"Basse Terre\" } },\n    { code: \"GU\", name: \"Guam\", lat: 13.444304, lon: 144.793731, flag: require(\"../img/640px-Flag_of_Guam.svg.png\"), flagAspectRatio: 1.864, capital: { name: \"Hagatna\" } },\n    { code: \"GT\", name: \"Guatemala\", lat: 15.783471, lon: -90.230759, flag: require(\"../img/Flag_of_Guatemala.svg.png\"), flagAspectRatio: 1.6, capital: { name: \"Guatemala\" }, shape: require(\"../img/guatemala.png\") },\n    { code: \"GG\", name: \"Guernsey\", lat: 49.465691, lon: -2.585278, flag: require(\"../img/Flag_of_Guernsey.svg.png\"), capital: { name: \"Saint Peter Port\" } },\n    { code: \"GN\", name: \"Guinea\", lat: 9.945587, lon: -9.696645, flag: require(\"../img/640px-Flag_of_Guinea.svg.png\"), flagAspectRatio: 2, capital: { name: \"Conakry\" }, shape: require(\"../img/guinea.png\") },\n    { code: \"GW\", name: \"Guinea-Bissau\", flag: require(\"../img/320px-Flag_of_Guinea-Bissau.png\"), lat: 11.803749, lon: -15.180413, shape: require(\"../img/guinea-bissau.png\") },\n    { code: \"GY\", name: \"Guyana\", lat: 4.860416, lon: -58.93018, flag: require(\"../img/320px-Flag_of_Guyana.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Georgetown\" }, shape: require(\"../img/guyana.png\") },\n    { code: \"HT\", name: \"Haiti\", lat: 18.971187, lon: - 72.285215, flag: require(\"../img/Flag_of_Haiti.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Port au Prince\" }, shape: require(\"../img/haiti.png\") },\n    // { code: \"HM\", name: \"Heard Island and McDonald Islands\", lat: -53.08181, lon: 73.504158 },\n    { code: \"VA\", name: \"Vatican (Holy See)\", lat: 41.902916, lon: 12.453389, flag: require(\"../img/Flag_of_the_Vatican_City.svg.png\"), flagAspectRatio: 1, capital: { name: \"Vatican\" }, shape: require(\"../img/vatican.png\") },\n    { code: \"HN\", name: \"Honduras\", lat: 15.199999, lon: -86.241905, flag: require(\"../img/Flag_of_Honduras.svg.png\"), flagAspectRatio: 2, capital: { name: \"Tegucigalpa\" }, shape: require(\"../img/honduras.png\") },\n    { code: \"HK\", name: \"Hong Kong\", lat: 22.396428, lon: 114.109497, flag: require(\"../img/Flag_of_Hong_Kong.png\"), capital: { name: \"Hong Kong\" }, shape: require(\"../img/hong-kong.png\") },\n    { code: \"HU\", name: \"Hungary\", lat: 47.162494, lon: 19.503304, flag: require(\"../img/Flag_of_Hungary.png\"), flagAspectRatio: 2, capital: { name: \"Budapest\" }, shape: require(\"../img/hungary.png\") },\n    { code: \"IS\", name: \"Iceland\", lat: 64.963051, lon: -19.020835, flag: require(\"../img/Flag_of_Iceland.png\"), flagAspectRatio: 1.389, capital: { name: \"Reykjavik\" }, shape: require(\"../img/iceland.png\") },\n    { code: \"IN\", name: \"India\", lat: 20.593684, lon: 78.96288, flag: require(\"../img/Flag_of_India.png\"), capital: { name: \"New Delhi\" }, shape: require(\"../img/india-2.png\") },\n    { code: \"ID\", name: \"Indonesia\", lat: -0.789275, lon: 113.921327, flag: require(\"../img/Flag_of_Indonesia.png\"), capital: { name: \"Jakarta\" }, shape: require(\"../img/indonesia.png\") },\n    { code: \"IR\", name: \"Iran\", lat: 32.427908, lon: 53.688046, flag: require(\"../img/640px-Flag_of_Iran.png\"), flagAspectRatio: 1.75, capital: { name: \"Tehran\" }, shape: require(\"../img/iran.png\") },\n    { code: \"IQ\", name: \"Iraq\", lat: 33.223191, lon: 43.679291, flag: require(\"../img/Flag_of_Iraq.png\"), capital: { name: \"Baghdad\" }, shape: require(\"../img/iraq.png\") },\n    { code: \"IE\", name: \"Ireland\", lat: 53.41291, lon: -8.24389, flag: require(\"../img/Flag_of_Ireland.png\"), capital: { name: \"Dublin\" }, shape: require(\"../img/ireland.png\") },\n    { code: \"IM\", name: \"Isle of Man\", lat: 54.236107, lon: -4.548056, flag: require(\"../img/Flag_of_the_Isle_of_Mann.png\"), flagAspectRatio: 2, capital: { name: \"Douglas\" } },\n    { code: \"IL\", name: \"Israel\", lat: 31.046051, lon: 34.851612, flag: require(\"../img/640px-Flag_of_Israel.png\"), flagAspectRatio: 1.375, capital: { name: \"Jerusalem\" }, shape: require(\"../img/israel.png\") },\n    { code: \"IT\", name: \"Italy\", lat: 41.87194, lon: 12.56738, flag: require(\"../img/Flag_of_Italy.png\"), capital: { name: \"Rome\" }, shape: require(\"../img/italy.png\") },\n    { code: \"JM\", name: \"Jamaica\", lat: 18.109581, lon: -77.297508, flag: require(\"../img/Flag_of_Jamaica.png\"), flagAspectRatio: 2, capital: { name: \"Kingston\" }, shape: require(\"../img/jamaica.png\") },\n    { code: \"JP\", name: \"Japan\", lat: 36.204824, lon: 138.252924, flag: require(\"../img/Flag_of_Japan.png\"), capital: { name: \"Tokyo\" }, shape: require(\"../img/japan.png\") },\n    { code: \"JE\", name: \"Jersey\", lat: 49.214439, lon: -2.13125, flag: require(\"../img/Flag_of_Jersey.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Saint Helier\" } },\n    { code: \"JO\", name: \"Jordan\", lat: 30.585164, lon: 36.238414, flag: require(\"../img/640px-Flag_of_Jordan.svg.png\"), flagAspectRatio: 2, capital: { name: \"Amman\" }, shape: require(\"../img/jordan.png\") },\n    { code: \"KZ\", name: \"Kazakhstan\", lat: 48.019573, lon: 66.923684, flag: require(\"../img/640px-Flag_of_Kazakhstan.png\"), flagAspectRatio: 2, capital: { name: \"Nur Sultan\" }, shape: require(\"../img/kazakhstan.png\") },\n    { code: \"KE\", name: \"Kenya\", lat: -0.023559, lon: 37.906193, flag: require(\"../img/640px-Flag_of_Kenya.png\"), capital: { name: \"Nairobi\" }, shape: require(\"../img/kenya.png\") },\n    { code: \"KI\", name: \"Kiribati\", flag: require(\"../img/320px-Flag_of_Kiribati.svg.png\"), flagAspectRatio: 2, lat: -3.370417, lon: -168.734039, capital: { name: \"Tarawa\" } },\n    { code: \"KP\", name: \"North Korea\", lat: 40.339852, lon: 127.510093, flag: require(\"../img/Flag_of_North_Korea.png\"), flagAspectRatio: 2, capital: { name: \"Pyongyang\" }, shape: require(\"../img/north-korea.png\") },\n    { code: \"KR\", name: \"South Korea\", lat: 35.907757, lon: 127.766922, flag: require(\"../img/Flag_of_South_Korea.png\"), capital: { name: \"Seoul\" }, shape: require(\"../img/south-korea.png\") },\n    { code: \"KW\", name: \"Kuwait\", flag: require(\"../img/Flag_of_Kuwait.png\"), flagAspectRatio: 2, lat: 29.31166, lon: 47.481766, capital: { name: \"Kuwait City\" }, shape: require(\"../img/kuwait.png\") },\n    { code: \"KG\", name: \"Kyrgyzstan\", lat: 41.20438, lon: 74.766098, flag: require(\"../img/Flag_of_Kyrgyzstan.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Bishkek\" }, shape: require(\"../img/kyrgyzstan.png\") },\n    { code: \"LA\", name: \"Laos\", lat: 19.85627, lon: 102.495496, flag: require(\"../img/Flag_of_Laos.svg.png\"), capital: { name: \"Vientiane\" }, shape: require(\"../img/laos.png\") },\n    { code: \"LV\", name: \"Latvia\", lat: 56.879635, lon: 24.603189, flag: require(\"../img/640px-Flag_of_Latvia.png\"), flagAspectRatio: 2, capital: { name: \"Riga\" }, shape: require(\"../img/latvia.png\") },\n    { code: \"LB\", name: \"Lebanon\", lat: 33.854721, lon: 35.862285, flag: require(\"../img/640px-Flag_of_Lebanon.svg.png\"), capital: { name: \"Beirut\" }, shape: require(\"../img/lebanon.png\") },\n    { code: \"LS\", name: \"Lesotho\", lat: -29.609988, lon: 28.233608, flag: require(\"../img/Flag_of_Lesotho.svg.png\"), capital: { name: \"Maseru\" }, shape: require(\"../img/lesotho.png\") },\n    { code: \"LR\", name: \"Liberia\", lat: 6.428055, lon: -9.429499, flag: require(\"../img/Flag_of_Liberia.svg.png\"), flagAspectRatio: 1.9, capital: { name: \"Monrovia\" }, shape: require(\"../img/liberia.png\") },\n    { code: \"LY\", name: \"Libya\", lat: 26.3351, lon: 17.228331, flag: require(\"../img/Flag_of_Libya.svg.png\"), flagAspectRatio: 2, capital: { name: \"Tripoli\" }, shape: require(\"../img/libya.png\") },\n    { code: \"LI\", name: \"Liechtenstein\", lat: 47.166, lon: 9.555373, flag: require(\"../img/320px-Flag_of_Liechtenstein.png\"), flagAspectRatio: 1.667, capital: { name: \"Vaduz\" } },\n    { code: \"LT\", name: \"Lithuania\", lat: 55.169438, lon: 23.881275, flag: require(\"../img/320px-Flag_of_Lithuania.png\"), flagAspectRatio: 1.667, capital: { name: \"Vilnus\" }, shape: require(\"../img/lithuania.png\") },\n    { code: \"LU\", name: \"Luxembourg\", lat: 49.815273, lon: 6.129583, flag: require(\"../img/320px-Flag_of_Luxembourg.png\"), flagAspectRatio: 1.667, capital: { name: \"Luxembourg\" }, shape: require(\"../img/luxembourg.png\") },\n    { code: \"MK\", name: \"North Macedonia\", lat: 41.608635, lon: 21.745275, flag: require(\"../img/Flag_of_North_Macedonia.png\"), flagAspectRatio: 2, capital: { name: \"Skopje\" }, shape: require(\"../img/macedonia.png\") },\n    { code: \"MG\", name: \"Madagascar\", lat: -18.766947, lon: 46.869107, flag: require(\"../img/640px-Flag_of_Madagascar.svg.png\"), capital: { name: \"Antananarivo\" }, shape: require(\"../img/madagascar.png\") },\n    { code: \"MW\", name: \"Malawi\", flag: require(\"../img/320px-Flag_of_Malawi.svg.png\"), lat: -13.254308, lon: 34.301525, capital: { name: \"Lilongwe\" }, shape: require(\"../img/malawi.png\") },\n    { code: \"MY\", name: \"Malaysia\", lat: 4.210484, lon: 101.975766, flag: require(\"../img/Flag_of_Malaysia.png\"), flagAspectRatio: 2, capital: { name: \"Kuala Lumpur\" }, shape: require(\"../img/malaysia.png\") },\n    { code: \"MV\", name: \"Maldives\", lat: 3.202778, lon: 73.22068, flag: require(\"../img/Flag_of_Maldives.svg.png\"), capital: { name: \"Male\" } },\n    { code: \"ML\", name: \"Mali\", lat: 17.570692, lon: -3.996166, flag: require(\"../img/640px-Flag_of_Mali.svg.png\"), capital: { name: \"Bamako\" }, shape: require(\"../img/mali.png\") },\n    { code: \"MT\", name: \"Malta\", lat: 35.937496, lon: 14.375416, flag: require(\"../img/Flag_of_Malta.png\"), capital: { name: \"Valetta\" }, shape: require(\"../img/malta.png\") },\n    { code: \"MH\", name: \"Marshall Islands\", lat: 7.131474, lon: 171.184478, flag: require(\"../img/Flag_of_the_Marshall_Islands.svg.png\"), flagAspectRatio: 1.9, capital: { name: \"Majuro\" } },\n    { code: \"MQ\", name: \"Martinique\", lat: 14.641528, lon: -61.024174, capital: { name: \"Fort de France\" }, shape: require(\"../img/martinique.png\") },\n    { code: \"MR\", name: \"Mauritania\", flag: require(\"../img/Flag_of_Mauritania.png\"), lat: 21.00789, lon: -10.940835, capital: { name: \"Nouakchott\" }, shape: require(\"../img/mauritania.png\") },\n    { code: \"MU\", name: \"Mauritius\", flag: require(\"../img/Flag_of_Mauritius.png\"), lat: -20.348404, lon: 57.552152, capital: { name: \"Port Louis\" }, shape: require(\"../img/mauritius.png\") },\n    { code: \"YT\", name: \"Mayotte\", flag: require(\"../img/320px-Flag_of_Mayotte_(local).png\"), lat: -12.8275, lon: 45.166244, capital: { name: \"Mamoudzou\" } },\n    { code: \"MX\", name: \"Mexico\", lat: 23.634501, lon: -102.552784, flag: require(\"../img/Flag_of_Mexico.png\"), flagAspectRatio: 1.75, capital: { name: \"Mexico City\" }, shape: require(\"../img/mexican-republic-map-black-shape.png\") },\n    { code: \"FM\", name: \"Micronesia\", flag: require(\"../img/320px-Flag_of_the_Federated_States_of_Micronesia.png\"), flagAspectRatio: 1.9, lat: 7.425554, lon: 150.550812, capital: { name: \"Palikir\" } },\n    { code: \"MD\", name: \"Moldova\", lat: 47.411631, lon: 28.369885, flag: require(\"../img/Flag_of_Moldova.png\"), flagAspectRatio: 2, capital: { name: \"Chisinau\" }, shape: require(\"../img/moldova.png\") },\n    { code: \"MC\", name: \"Monaco\", lat: 43.750298, lon: 7.41284, flag: require(\"../img/Flag_of_Monaco.png\"), flagAspectRatio: 1.25, capital: { name: \"Monaco\" }, shape: require(\"../img/monaco.png\") },\n    { code: \"MN\", name: \"Mongolia\", lat: 46.862496, lon: 103.846656, flag: require(\"../img/Flag_of_Mongolia.png\"), flagAspectRatio: 2, capital: { name: \"Ulaanbaatar\" }, shape: require(\"../img/mongolia.png\") },\n    { code: \"ME\", name: \"Montenegro\", lat: 42.708678, lon: 19.37439, flag: require(\"../img/Flag_of_Montenegro.png\"), flagAspectRatio: 2, capital: { name: \"Podgorica\" }, shape: require(\"../img/montenegro.png\") },\n    { code: \"MS\", name: \"Montserrat\", flag: require(\"../img/320px-Flag_of_Montserrat.png\"), flagAspectRatio: 2, lat: 16.742498, lon: -62.187366, capital: { name: \"Plymouth\" }, shape: require(\"../img/montserrat.png\") },\n    { code: \"MA\", name: \"Morocco\", lat: 31.791702, lon: -7.09262, flag: require(\"../img/Flag_of_Morocco.png\"), capital: { name: \"Rabat\" }, shape: require(\"../img/morocco.png\") },\n    { code: \"MZ\", name: \"Mozambique\", flag: require(\"../img/Flag_of_Mozambique.png\"), lat: -18.665695, lon: 35.529562, capital: { name: \"Maputo\" }, shape: require(\"../img/mozambique.png\") },\n    { code: \"MM\", name: \"Myanmar\", flag: require(\"../img/Flag_of_Myanmar.png\"), lat: 21.913965, lon: 95.956223, capital: { name: \"Naypyidaw\" }, shape: require(\"../img/myanmar.png\") },\n    { code: \"NA\", name: \"Namibia\", flag: require(\"../img/Flag_of_Namibia.png\"), lat: -22.95764, lon: 18.49041, capital: { name: \"Windhoek\" }, shape: require(\"../img/namibia.png\") },\n    { code: \"NR\", name: \"Nauru\", flag: require(\"../img/512px-Flag_of_Nauru.png\"), flagAspectRatio: 2, lat: -0.522778, lon: 166.931503, capital: { name: \"Yaren\" }, shape: require(\"../img/nauru.png\") },\n    { code: \"NP\", name: \"Nepal\", lat: 28.394857, lon: 84.124008, flag: require(\"../img/Flag_of_Nepal.png\"), flagAspectRatio: 0.820, capital: { name: \"Kathmandu\" }, shape: require(\"../img/nepal.png\") },\n    { code: \"NL\", name: \"Netherlands\", lat: 52.132633, lon: 5.291266, flag: require(\"../img/512px-Flag_of_the_Netherlands.png\"), emoji: \"🇳🇱\", capital: { name: \"Amsterdam\", icon: \"../img/amsterdam.png\" }, shape: require(\"../img/netherlands.png\") },\n    // { code: \"NC\", name: \"New Caledonia\", flag: require(\"../img/320px-Flags_of_New_Caledonia.png\"), flagAspectRatio: 2, lat: -20.904305, lon: 165.618042, capital: { name: \"Noumea\" } },\n    { code: \"NZ\", name: \"New Zealand\", lat: -40.900557, lon: 174.885971, flag: require(\"../img/Flag_of_New_Zealand.png\"), flagAspectRatio: 2, capital: { name: \"Wellington\" } },\n    { code: \"NI\", name: \"Nicaragua\", lat: 12.865416, lon: -85.207229, flag: require(\"../img/256px-Flag_of_Nicaragua.svg.png\"), flagAspectRatio: 1.667, capital: { name: \"Managua\" }, shape: require(\"../img/nicaragua.png\") },\n    { code: \"NE\", name: \"Niger\", lat: 17.607789, lon: 8.081666, flag: require(\"../img/512px-Flag_of_Niger.svg.png\"), flagAspectRatio: 1.167, capital: { name: \"Niamey\" }, shape: require(\"../img/niger.png\") },\n    { code: \"NG\", name: \"Nigeria\", flag: require(\"../img/Flag_of_Nigeria.png\"), flagAspectRatio: 2, lat: 9.081999, lon: 8.675277, capital: { name: \"Abuja\" }, shape: require(\"../img/nigeria.png\") },\n    { code: \"NU\", name: \"Niue\", flag: require(\"../img/320px-Flag_of_Niue.png\"), flagAspectRatio: 2, lat: -19.054445, lon: -169.867233, capital: { name: \"Alofi\" } },\n    // { code: \"NF\", name: \"Norfolk Island\", flag: require(\"../img/320px-Flag_of_Norfolk_Island.svg.png\"), flagAspectRatio: 2, lat: -29.040835, lon: 167.954712, capital: { name: \"Kingston\" } },\n    { code: \"MP\", name: \"Northern Mariana Islands\", flag: require(\"../img/320px-Flag_of_Northern_Mariana_Islands.jpg\"), flagAspectRatio: 2, lat: 17.33083, lon: 145.38469, capital: { name: \"Saipan\" } },\n    { code: \"NO\", name: \"Norway\", flag: require(\"../img/Flag_of_Norway.png\"), lat: 60.472024, lon: 8.468946, flagAspectRatio: 1.375, capital: { name: \"Oslo\" }, shape: require(\"../img/norway.png\") },\n    { code: \"OM\", name: \"Oman\", flag: require(\"../img/Flag_of_Oman.png\"), flagAspectRatio: 2, lat: 21.512583, lon: 55.923255, capital: { name: \"Oman\" }, shape: require(\"../img/oman.png\") },\n    { code: \"PK\", name: \"Pakistan\", flag: require(\"../img/Flag_of_Pakistan.png\"), lat: 30.375321, lon: 69.345116, capital: { name: \"Islamabad\" }, shape: require(\"../img/pakistan.png\") },\n    { code: \"PW\", name: \"Palau\", flag: require(\"../img/320px-Flag_of_Palau.svg.png\"), flagAspectRatio: 1.6, lat: 7.51498, lon: 134.58252, capital: { name: \"Ngerlumud\" }, shape: require(\"../img/palau.png\") },\n    { code: \"PS\", name: \"Palestine\", flag: require(\"../img/Flag_of_Palestine.png\"), flagAspectRatio: 2, lat: 31.952162, lon: 35.233154, capital: { name: \"Ramallah\" }, shape: require(\"../img/palestine.png\") },\n    { code: \"PA\", name: \"Panama\", flag: require(\"../img/Flag_of_Panama.png\"), lat: 8.537981, lon: -80.782127, capital: { name: \"Panama City\" }, shape: require(\"../img/panama.png\") },\n    { code: \"PG\", name: \"Papua New Guinea\", flag: require(\"../img/Flag_of_Papua_New_Guinea.png\"), flagAspectRatio: 1.333, lat: -6.314993, lon: 143.95555, capital: { name: \"Port Moresby\" }, shape: require(\"../img/papua-new-guinea.png\") },\n    { code: \"PY\", name: \"Paraguay\", flag: require(\"../img/Flag_of_Paraguay.png\"), flagAspectRatio: 1.818, lat: -23.442503, lon: -58.443832, capital: { name: \"Asuncion\" }, shape: require(\"../img/paraguay.png\") },\n    { code: \"PE\", name: \"Peru\", flag: require(\"../img/Flag_of_Peru.png\"), lat: -9.189967, lon: -75.015152, capital: { name: \"Lima\" }, shape: require(\"../img/peru.png\") },\n    { code: \"PH\", name: \"Philippines\", flag: require(\"../img/Flag_of_the_Philippines.png\"), flagAspectRatio: 2, lat: 12.879721, lon: 121.774017, capital: { name: \"Manila\" }, shape: require(\"../img/philippines.png\") },\n    { code: \"PN\", name: \"Pitcairn\", lat: -24.703615, lon: -127.439308, flagAspectRatio: 2, capital: { name: \"Adamstown\" } },\n    { code: \"PL\", name: \"Poland\", flag: require(\"../img/Flag_of_Poland.png\"), flagAspectRatio: 1.6, lat: 51.919438, lon: 19.145136, capital: { name: \"Warsaw\" }, shape: require(\"../img/poland.png\") },\n    { code: \"PT\", name: \"Portugal\", flag: require(\"../img/Flag_of_Portugal.png\"), lat: 39.399872, lon: -8.224454, capital: { name: \"Lisbon\" }, shape: require(\"../img/portugal.png\") },\n    { code: \"PR\", name: \"Puerto Rico\", flag: require(\"../img/320px-Flag_of_Puerto_Rico.png\"), lat: 18.220833, lon: -66.590149, capital: { name: \"San Juan\" }, shape: require(\"../img/puerto-rico.png\") },\n    { code: \"QA\", name: \"Qatar\", flag: require(\"../img/Flag_of_Qatar.png\"), flagAspectRatio: 2.545, lat: 25.354826, lon: 51.183884, capital: { name: \"Doha\" }, shape: require(\"../img/qatar.png\") },\n    // { code: \"RE\", name: \"Reunion\", flag: require(\"../img/320px-Flag_of_Réunion.svg.png\"), lat: -21.115141, lon: 55.536384, capital: { name: \"Saint Denis\" } },\n    { code: \"RO\", name: \"Romania\", flag: require(\"../img/320px-Flag_of_Romania.png\"), lat: 45.943161, lon: 24.96676, capital: { name: \"Bucharest\" }, shape: require(\"../img/romania.png\") },\n    { code: \"RU\", name: \"Russian Federation\", flag: require(\"../img/Flag_of_Russia.png\"), lat: 61.52401, lon: 105.318756, emoji: '💩', capital: { name: \"Moscow\" }, shape: require(\"../img/russia.png\") },\n    { code: \"RW\", name: \"Rwanda\", flag: require(\"../img/Flag_of_Rwanda.png\"), lat: -1.940278, lon: 29.873888, capital: { name: \"Kigali\" }, shape: require(\"../img/rwanda.png\") },\n    // { code: \"BL\", name: \"Saint Barth\\u00e9lemy\" },\n    { code: \"SH\", name: \"Saint Helena, Ascension and Tristan da Cunha\", flag: require(\"../img/320px-Flag_of_Saint_Helena.svg.png\"), lat: -24.143474, lon: -10.030696, capital: { name: \"Jamestown\" } },\n    { code: \"KN\", name: \"Saint Kitts and Nevis\", flag: require(\"../img/Flag_of_Saint_Kitts_and_Nevis.png\"), lat: 17.357822, lon: -62.782998, capital: { name: \"Basseterre\" }, shape: require(\"../img/saint-kitts-and-nevis.png\") },\n    { code: \"LC\", name: \"Saint Lucia\", flag: require(\"../img/320px-Flag_of_Saint_Lucia.svg.png\"), flagAspectRatio: 2, lat: 13.909444, lon: -60.978893, capital: { name: \"Castries\" }, shape: require(\"../img/saint-lucia.png\") },\n    // { code: \"MF\", name: \"Saint Martin (French part)\" },\n    { code: \"PM\", name: \"Saint Pierre and Miquelon\", flag: require(\"../img/320px-Flag_of_Saint-Pierre_and_Miquelon.svg.png\"), lat: 46.941936, lon: -56.27111, capital: { name: \"Saint Pierre\" } },\n    { code: \"VC\", name: \"Saint Vincent and the Grenadines\", flag: require(\"../img/320px-Flag_of_Saint_Vincent_and_the_Grenadines.svg.png\"), lat: 12.984305, lon: -61.287228, capital: { name: \"Kingstown\" }, shape: require(\"../img/saint-vincent-and-the-grenadines.png\") },\n    { code: \"WS\", name: \"Samoa\", flag: require(\"../img/320px-Flag_of_Samoa.svg.png\"), flagAspectRatio: 2, lat: -13.759029, lon: -172.104629, capital: { name: \"Apia\" } },\n    { code: \"SM\", name: \"San Marino\", flag: require(\"../img/320px-Flag_of_San_Marino.svg.png\"), flagAspectRatio: 1.333, lat: 43.94236, lon: 12.457777, capital: { name: \"San Marino\" }, shape: require(\"../img/san-marino.png\") },\n    { code: \"ST\", name: \"Sao Tome and Principe\", flag: require(\"../img/320px-Flag_of_Sao_Tome_and_Principe.svg.png\"), flagAspectRatio: 2, lat: 0.18636, lon: 6.613081, capital: { name: \"Sao Tome\" }, shape: require(\"../img/sao-tome-and-principe.png\") },\n    { code: \"SA\", name: \"Saudi Arabia\", flag: require(\"../img/320px-Flag_of_Saudi_Arabia.svg.png\"), lat: 23.885942, lon: 45.079162, capital: { name: \"Riyadh\" }, shape: require(\"../img/saudi-arabia.png\") },\n    { code: \"SN\", name: \"Senegal\", flag: require(\"../img/320px-Flag_of_Senegal.svg.png\"), lat: 14.497401, lon: -14.452362, capital: { name: \"Dakar\" }, shape: require(\"../img/senegal.png\") },\n    { code: \"RS\", name: \"Serbia\", flag: require(\"../img/320px-Flag_of_Serbia.svg.png\"), lat: 44.016521, lon: 21.005859, capital: { name: \"Belgrade\" }, shape: require(\"../img/serbia.png\") },\n    { code: \"SC\", name: \"Seychelles\", flag: require(\"../img/320px-Flag_of_Seychelles.svg.png\"), flagAspectRatio: 2, lat: -4.679574, lon: 55.491977, capital: { name: \"Victoria\" }, shape: require(\"../img/seychelles.png\") },\n    { code: \"SL\", name: \"Sierra Leone\", flag: require(\"../img/320px-Flag_of_Sierra_Leone.svg.png\"), lat: 8.460555, lon: -11.779889, capital: { name: \"Freetown\" }, shape: require(\"../img/sierra-leone.png\") },\n    { code: \"SG\", name: \"Singapore\", flag: require(\"../img/320px-Flag_of_Singapore.svg.png\"), lat: 1.352083, lon: 103.819836, capital: { name: \"Singapore\" }, shape: require(\"../img/singapore.png\") },\n    // { code: \"SX\", name: \"Sint Maarten\" },\n    { code: \"SK\", name: \"Slovakia\", flag: require(\"../img/320px-Flag_of_Slovakia.svg.png\"), lat: 48.669026, lon: 19.699024, capital: { name: \"Bratislava\" }, shape: require(\"../img/slovakia.png\") },\n    { code: \"SI\", name: \"Slovenia\", flag: require(\"../img/320px-Flag_of_Slovenia.svg.png\"), flagAspectRatio: 2, lat: 46.151241, lon: 14.995463, capital: { name: \"Ljubljana\" }, shape: require(\"../img/slovenia.png\") },\n    { code: \"SB\", name: \"Solomon Islands\", flag: require(\"../img/320px-Flag_of_Solomon_Islands.jpg\"), flagAspectRatio: 2, lat: -9.64571, lon: 160.156194, capital: { name: \"Honiara\" } },\n    { code: \"SO\", name: \"Somalia\", flag: require(\"../img/320px-Flag_of_Somalia.svg.png\"), lat: 5.152149, lon: 46.199616, capital: { name: \"Mogadishu\" }, shape: require(\"../img/somalia.png\") },\n    { code: \"ZA\", name: \"South Africa\", flag: require(\"../img/400px-Flag_of_South_Africa.svg.png\"), lat: -30.559482, lon: 22.937506, capital: { name: \"Cape Town\" }, shape: require(\"../img/south-africa.png\") },\n    { code: \"GS\", name: \"South Georgia and the South Sandwich Islands\", flag: require(\"../img/320px-Flag_of_South_Georgia_and_the_South_Sandwich_Islands.svg.png\"), flagAspectRatio: 2, lat: -54.429579, lon: -36.587909, capital: { name: \"King Edward Point\" } },\n    { code: \"SS\", name: \"South Sudan\", flag: require(\"../img/320px-Flag_of_South_Sudan.svg.png\"), flagAspectRatio: 2, lat: 6.8770, lon: 31.3070, capital: { name: \"Juba\" }, shape: require(\"../img/south-sudan.png\") },\n    { code: \"ES\", name: \"Spain\", flag: require(\"../img/320px-Flag_of_Spain.svg.png\"), lat: 40.463667, lon: -3.74922, capital: { name: \"Madrid\" }, shape: require(\"../img/spain.png\") },\n    { code: \"LK\", name: \"Sri Lanka\", flag: require(\"../img/320px-Flag_of_Sri_Lanka.svg.png\"), flagAspectRatio: 2, lat: 7.873054, lon: 80.771797, capital: { name: \"Colombo\" }, shape: require(\"../img/sri-lanka.png\") },\n    { code: \"SD\", name: \"Sudan\", flag: require(\"../img/320px-Flag_of_Sudan.svg.png\"), flagAspectRatio: 2, lat: 12.862807, lon: 30.217636, capital: { name: \"Khartorum\" }, shape: require(\"../img/sudan.png\") },\n    { code: \"SR\", name: \"Suriname\", flag: require(\"../img/320px-Flag_of_Suriname.svg.png\"), lat: 3.919305, lon: -56.027783, capital: { name: \"Paramaribo\" }, shape: require(\"../img/suriname.png\") },\n    // { code: \"SJ\", name: \"Svalbard and Jan Mayen\", flag: require(\"../img/placeholder\"), lat: 77.553604, lon: 23.670272, capital: { name: \"Longyear\" } },\n    { code: \"SZ\", name: \"Eswatini (Swaziland)\", flag: require(\"../img/320px-Flag_of_Eswatini.svg.png\"), lat: -26.522503, lon: 31.465866, capital: { name: \"Mbabane\" }, shape: require(\"../img/swaziland.png\") },\n    { code: \"SE\", name: \"Sweden\", flag: require(\"../img/512px-Flag_of_Sweden.svg.png\"), flagAspectRatio: 1.6, lat: 60.128161, lon: 18.643501, capital: { name: \"Stockholm\" }, shape: require(\"../img/sweden.png\") },\n    { code: \"CH\", name: \"Switzerland\", flag: require(\"../img/512px-Flag_of_Switzerland.svg.png\"), flagAspectRatio: 1, lat: 46.818188, lon: 8.227512, capital: { name: \"Bern\" }, shape: require(\"../img/switzerland.png\") },\n    { code: \"SY\", name: \"Syria\", flag: require(\"../img/320px-Flag_of_Syria.svg.png\"), lat: 34.802075, lon: 38.996815, capital: { name: \"Damascus\" }, shape: require(\"../img/syria.png\") },\n    { code: \"TW\", name: \"Taiwan\", flag: require(\"../img/320px-Flag_of_Taiwan.png\"), lat: 23.69781, lon: 120.960515, capital: { name: \"Taipei City\" }, shape: require(\"../img/taiwan.png\") },\n    { code: \"TJ\", name: \"Tajikistan\", flag: require(\"../img/320px-Flag_of_Tajikistan.svg.png\"), flagAspectRatio: 2, lat: 38.861034, lon: 71.276093, capital: { name: \"Dushanbe\" }, shape: require(\"../img/tajikistan.png\") },\n    { code: \"TZ\", name: \"Tanzania\", flag: require(\"../img/320px-Flag_of_Tanzania.svg.png\"), lat: -6.369028, lon: 34.888822, capital: { name: \"Dodoma\" }, shape: require(\"../img/tanzania.png\") },\n    { code: \"TH\", name: \"Thailand\", flag: require(\"../img/320px-Flag_of_Thailand.svg.png\"), lat: 15.870032, lon: 100.992541, capital: { name: \"Bangkok\" }, shape: require(\"../img/thailand.png\") },\n    { code: \"TL\", name: \"East Timor (Timor-Leste)\", flag: require(\"../img/320px-Flag_of_East_Timor.svg.png\"), flagAspectRatio: 2, lat: -8.874217, lon: 125.727539, capital: { name: \"Dili\" }, shape: require(\"../img/east-timor.png\") },\n    { code: \"TG\", name: \"Togo\", flag: require(\"../img/320px-Flag_of_Togo.svg.png\"), flagAspectRatio: 1.6, lat: 8.619543, lon: 0.824782, capital: { name: \"Lome\" }, shape: require(\"../img/togo.png\") },\n    { code: \"TK\", name: \"Tokelau\", flag: require(\"../img/320px-Flag_of_Tokelau.svg.png\"), flagAspectRatio: 2, lat: -8.967363, lon: -171.855881, capital: { name: \"Nukunonu\" } },\n    { code: \"TO\", name: \"Tonga\", flag: require(\"../img/320px-Flag_of_Tonga.svg.png\"), flagAspectRatio: 2, lat: -21.178986, lon: -175.198242, capital: { name: \"Nuku'alofa\" }, shape: require(\"../img/tonga.png\") },\n    { code: \"TT\", name: \"Trinidad and Tobago\", flag: require(\"../img/320px-Flag_of_Trinidad_and_Tobago.svg.png\"), flagAspectRatio: 1.667, lat: 10.691803, lon: -61.222503, capital: { name: \"Port of Spain\" }, shape: require(\"../img/trinidad-and-tobago.png\") },\n    { code: \"TN\", name: \"Tunisia\", flag: require(\"../img/320px-Flag_of_Tunisia.svg.png\"), lat: 33.886917, lon: 9.537499, capital: { name: \"Tunis\" }, shape: require(\"../img/tunisia.png\") },\n    { code: \"TR\", name: \"Turkey\", flag: require(\"../img/320px-Flag_of_Turkey.svg.png\"), lat: 38.963745, lon: 35.243322, capital: { name: \"Ankara\" }, shape: require(\"../img/turkey.png\") },\n    { code: \"TM\", name: \"Turkmenistan\", flag: require(\"../img/320px-Flag_of_Turkmenistan.svg.png\"), lat: 38.969719, lon: 59.556278, capital: { name: \"Ashgabat\" }, shape: require(\"../img/turkmenistan-.png\") },\n    { code: \"TC\", name: \"Turks and Caicos Islands\", flag: require(\"../img/320px-Flag_of_the_Turks_and_Caicos_Islands.svg.png\"), lat: 21.694025, lon: -71.797928, capital: { name: \"Cockburn Town\" } },\n    { code: \"TV\", name: \"Tuvalu\", flag: require(\"../img/320px-Flag_of_Tuvalu.svg.png\"), lat: -7.109535, lon: 177.64933, capital: { name: \"Funafuti\" } },\n    { code: \"UG\", name: \"Uganda\", flag: require(\"../img/320px-Flag_of_Uganda.svg.png\"), lat: 1.373333, lon: 32.290275, capital: { name: \"Kampala\" }, shape: require(\"../img/uganda.png\") },\n    { code: \"UA\", name: \"Ukraine\", flag: require(\"../img/320px-Flag_of_Ukraine.svg.png\"), lat: 48.379433, lon: 31.16558, capital: { name: \"Kyiv\" }, shape: require(\"../img/ukraine.png\") },\n    { code: \"AE\", name: \"United Arab Emirates\", flag: require(\"../img/512px-Flag_of_the_United_Arab_Emirates.svg.png\"), flagAspectRatio: 2, lat: 23.424076, lon: 53.84781, capital: { name: \"Abu Dhabi\" }, emoji: \"🇦🇪\", shape: require(\"../img/united-arab-emirates.png\") },\n    { code: \"GB\", name: \"United Kingdom\", flag: require(\"../img/320px-Flag_of_the_United_Kingdom.svg.png\"), flagAspectRatio: 2, lat: 55.378051, lon: -3.435973, capital: { name: \"London\" }, shape: require(\"../img/united-kingdom.png\") },\n    { code: \"US\", name: \"United States\", flag: require(\"../img/320px-Flag_of_the_United_States.svg.png\"), flagAspectRatio: 1.9, lat: 37.09024, lon: -95.712891, capital: { name: \"Washington\" }, shape: require(\"../img/united-states-of-america.png\") },\n    // { code: \"UM\", name: \"United States Minor Outlying Islands\" },\n    { code: \"UY\", name: \"Uruguay\", flag: require(\"../img/320px-Flag_of_Uruguay.svg.png\"), lat: -32.522779, lon: -55.765835, capital: { name: \"Montevideo\" }, shape: require(\"../img/uruguay.png\") },\n    { code: \"UZ\", name: \"Uzbekistan\", flag: require(\"../img/320px-Flag_of_Uzbekistan.svg.png\"), flagAspectRatio: 2, lat: 41.377491, lon: 64.585262, capital: { name: \"Tashkent\" }, shape: require(\"../img/uzbekistan.png\") },\n    { code: \"VU\", name: \"Vanuatu\", flag: require(\"../img/320px-Flag_of_Vanuatu.svg.png\"), flagAspectRatio: 1.895, lat: -15.376706, lon: 166.959158, capital: { name: \"Port Vila\" }, shape: require(\"../img/vanuatu.png\") },\n    { code: \"VE\", name: \"Venezuela\", flag: require(\"../img/320px-Flag_of_Venezuela.svg.png\"), lat: 6.42375, lon: -66.58973, capital: { name: \"Caracas\" }, shape: require(\"../img/venezuela.png\") },\n    { code: \"VN\", name: \"Vietnam\", flag: require(\"../img/320px-Flag_of_Vietnam.svg.png\"), lat: 14.058324, lon: 108.277199, capital: { name: \"Hanoi\" }, shape: require(\"../img/vietnam.png\") },\n    { code: \"VG\", name: \"Virgin Islands, British\", flag: require(\"../img/320px-Flag_of_the_British_Virgin_Islands.svg.png\"), lat: 18.420695, lon: -64.639968, capital: { name: \"Road Town\" } },\n    { code: \"VI\", name: \"Virgin Islands, U.S.\", flag: require(\"../img/320px-Flag_of_the_United_States_Virgin_Islands.svg.png\"), lat: 18.335765, lon: -64.896335, capital: { name: \"Charlotte Amalie\" } },\n    // { code: \"WF\", name: \"Wallis and Futuna\", flag: require(\"../img/320px-Flag_of_Wallis_and_Futuna.svg.png\"), lat: -13.768752, lon: -177.156097, capital: { name: \"Mata'utu\" } },\n    // { code: \"EH\", name: \"Western Sahara\", flag: require(\"../img/placeholder\"), flagAspectRatio: 2, lat: 24.215527, lon: -12.885834, capital: { name: \"Laayoune\" }, shape: require(\"../img/western-sahara.png\") },\n    { code: \"YE\", name: \"Yemen\", flag: require(\"../img/320px-Flag_of_Yemen.svg.png\"), lat: 15.552727, lon: 48.516388, capital: { name: \"Sana'a\" }, shape: require(\"../img/yemen.png\") },\n    { code: \"ZM\", name: \"Zambia\", flag: require(\"../img/320px-Flag_of_Zambia.svg.png\"), lat: -13.133897, lon: 27.849332, capital: { name: \"Lusaka\" }, shape: require(\"../img/zambia.png\") },\n    { code: \"ZW\", name: \"Zimbabwe\", flag: require(\"../img/320px-Flag_of_Zimbabwe.svg.png\"), flagAspectRatio: 2, lat: -19.015438, lon: 29.154857, capital: { name: \"Harare\" }, shape: require(\"../img/zimbabwe.png\") }\n]\n\nexport function searchCountry(text) {\n    const filterByText = (country) =>\n        country.name.toLowerCase().includes(text.toLowerCase());\n    const compareByText = (left, right) => {\n        if (right.name.startsWith(text)) {\n            return 1;\n        }\n        if (left.name.startsWith(text)) {\n            return -1;\n        }\n        for (const word of right.name.split(\" \")) {\n            if (word.startsWith(text)) {\n                return 1;\n            }\n        }\n        for (const word of left.name.split(\" \")) {\n            if (word.startsWith(text)) {\n                return -1;\n            }\n        }\n        return left.name.localeCompare(right.name);\n    }\n\n    return countryList.filter(filterByText).sort(compareByText);\n}\n\nexport const countriesWithShape = countryList.filter(country => country.shape != null);\nexport const countriesWithFlags = countryList.filter(country => country.flag != null);","\nimport {countriesWithFlags, countryList} from \"../data/CountryList\";\n\nexport const gameNumber =213;\n\nfunction generateConsistentRandomGameNumber() {\n    return generateConsistentRandomNumber(0, countriesWithFlags.length);\n}\n\nexport function generateConsistentRandomNumber(hash, limit) {\n    // First hash, based on the date\n    const today = new Date();\n    const demoModifier = 1;\n    const firstHash = (today.getDate() + hash + today.getMonth() * 5 * demoModifier) % limit;\n\n    // Second hash, based on a country's name\n    let secondHash = 0;\n    for (let i = 0; i < countryList[firstHash].name.length; i++) {\n        secondHash += countryList[firstHash].name.charCodeAt(0);\n    }\n\n    // Combine the two\n    let thirdHash = firstHash * secondHash;\n\n    return thirdHash % limit;\n}","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport countryList from '../data/CountryList';\nimport { gameNumber } from './GameNumber';\n\nconst today = new Date();\nconst datePrefix = gameNumber + today.getDate() + \"\" + today.getMonth();\n\nexport async function loadItem(item, fallback, setterToCall) {\n    try {\n        const itemFromStorage = await AsyncStorage.getItem('@' + datePrefix + item);\n        if (itemFromStorage != null) {\n            return setterToCall(JSON.parse(itemFromStorage));\n        }\n    } catch (e) {\n        console.log(\"Error loading \" + item);\n        console.log(e);\n    }\n    return setterToCall(fallback);\n}\n\nexport async function loadGlobalItem(item, fallback, setterToCall) {\n    try {\n        const itemFromStorage = await AsyncStorage.getItem('@' + item);\n        if (itemFromStorage != null) {\n            return setterToCall(JSON.parse(itemFromStorage));\n        }\n    } catch (e) {\n        console.log(\"Error loading \" + item);\n        console.log(e);\n    }\n    return setterToCall(fallback);\n}\n\nexport async function storeItem(name, value) {\n    try {\n        await AsyncStorage.setItem('@' + datePrefix + name, JSON.stringify(value));\n    } catch (e) {\n        console.log(\"Error storing \" + name);\n        console.log(e);\n    }\n}\n\nexport async function storeGlobalItem(name, value) {\n    try {\n        await AsyncStorage.setItem('@' + name, JSON.stringify(value));\n    } catch (e) {\n        console.log(\"Error storing \" + name);\n        console.log(e);\n    }\n}\n\nexport async function flushStorage() {\n    AsyncStorage.clear();\n}","import { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\n\nimport * as Clipboard from 'expo-clipboard';\nimport * as Linking from 'expo-linking'\n\nimport shareButton from '../img/send.png'\nimport globeButton from '../img/world.png'\nimport extraHeart from '../img/heart-2.png'\nimport { loadItem } from '../util/DataStorage';\nimport { maxHearts } from './Hearts';\n\nconst coordNamesToSmileys = [\n    { coord: \"→\", smiley: \"➡️\" },\n    { coord: \"↘\", smiley: \"↘️\" },\n    { coord: \"↓\", smiley: \"⬇️\" },\n    { coord: \"↙\", smiley: \"↙️\" },\n    { coord: \"←\", smiley: \"⬅️\" },\n    { coord: \"↖\", smiley: \"↖\" },\n    { coord: \"↑\", smiley: \"⬆️\" },\n    { coord: \"↗\", smiley: \"↗️\" },\n    { coord: \"✓\", smiley: \"✅\" },\n];\n\nexport function GameOverCountryName({ countryName }) {\n    return (\n        <Text style={styles.gameOver}>{countryName.toUpperCase()}</Text>\n    );\n}\n\nexport function GameOverMessage({ victory }) {\n    return (\n        <View>\n            {victory ?\n                <Text style={styles.gameOver}>VICTORY</Text>\n                :\n                <Text style={styles.gameOver}>GAME OVER</Text>\n            }\n        </View>\n    );\n}\n\nconst onPressShare = async () => {\n    let shareString = \"Can you beat me in Geodle?\\n\\n\";\n\n    // Load level 1\n    let level1Guesses;\n    await loadItem(\"guesses\", 0, (guessesFromStorage) => level1Guesses = guessesFromStorage);\n    let level1Victory;\n    await loadItem(\"level1Victory\", false, (victoryFromStorage) => level1Victory = victoryFromStorage);\n\n    // Load level 2\n    let level2Guesses;\n    await loadItem(\"level2Guesses\", [], (guessesFromStorage) => level2Guesses = guessesFromStorage);\n    let level2Victory;\n    await loadItem(\"level2Victory\", false, (victoryFromStorage) => level2Victory = victoryFromStorage);\n\n    // Load level 3\n    let level3Guesses;\n    await loadItem(\"level3Guesses\", [], (guessesFromStorage) => level3Guesses = guessesFromStorage);\n    let level3Victory;\n    await loadItem(\"level3Victory\", false, (victoryFromStorage) => level3Victory = victoryFromStorage);\n\n    // Count hearts used\n    let heartsUsed = level1Guesses.length + level2Guesses.length + level3Guesses.length;\n    if (level1Victory) {\n        heartsUsed--;\n    }\n    if (level2Victory) {\n        heartsUsed--;\n    }\n    if (level3Victory) {\n        heartsUsed--;\n    }\n    shareString += \"I used \" + heartsUsed + \" heart\";\n    if (heartsUsed > 1) {\n        shareString += \"s\";\n    }\n    if (level3Guesses.length > 0) {\n        shareString += \" for 3 levels:\";\n    } else if (level2Guesses.length > 0) {\n        shareString += \" for 2 levels:\";\n    } else {\n        shareString += \" on level 1:\"\n    }\n\n    // Summarize level 1\n    shareString += \"\\n\\nLevel 1: \";\n    for (const guess of level1Guesses) {\n        shareString += coordNamesToSmileys.filter(\n            (entry) => entry.coord == guess.direction\n        )[0].smiley;\n    }\n\n    // Summarize level 2\n    if (level2Guesses.length > 0) {\n        shareString += \"\\nLevel 2: \";\n        for (const guess of level2Guesses) {\n            shareString += guess\n        }\n    }\n\n    // Summarize level 3\n    if (level3Guesses.length > 0 || level3Victory == true) {\n        shareString += \"\\nLevel 3: \";\n        for (const guess of level3Guesses) {\n            shareString += guess.result;\n        }\n    }\n\n    // Add link\n    shareString += \"\\n\\nhttps://motrhelp.github.io/geodle/\"\n\n    // Copy to share\n    Clipboard.setStringAsync(shareString);\n    alert(\"Results copied to clipboard, share on!\")\n}\n\nconst onPressGoogleMaps = (countryName) => {\n    var googleMapsUrl = \"https://www.google.com/maps/place/\";\n    Linking.openURL(googleMapsUrl + countryName);\n}\n\nconst onPressNextLevel = (navigation, country, hearts) => {\n    navigation.navigate(\"GuessCapital\", { country, hearts })\n}\n\nexport function GameOverLinks({ country }) {\n    return (\n        <View style={styles.linksContainer}>\n            <TouchableOpacity\n                onPress={() => onPressGoogleMaps(country.name)}\n            >\n                <Image\n                    style={styles.pictogram}\n                    source={globeButton}\n                />\n            </TouchableOpacity>\n            <TouchableOpacity\n                onPress={() => onPressShare()}\n            >\n                <Image\n                    style={styles.pictogram}\n                    source={shareButton}\n                />\n            </TouchableOpacity>\n        </View>\n    );\n}\n\nexport function GlobeLink({ country }) {\n    return (\n        <TouchableOpacity\n            onPress={() => onPressGoogleMaps(country.name)}\n        >\n            <Image\n                style={styles.pictogram}\n                source={globeButton}\n            />\n        </TouchableOpacity>\n    );\n}\n\nexport function ShareButton() {\n    return (\n        <TouchableOpacity\n            onPress={() => onPressShare()}\n        >\n            <Image\n                style={styles.pictogram}\n                source={shareButton}\n            />\n        </TouchableOpacity>\n    );\n}\n\n\nexport function ExtraHearts({ hearts, setHearts }) {\n\n    function onPressExtraHearts() {\n        setHearts(hearts + 1);\n    }\n\n    return (\n        <TouchableOpacity\n            style={styles.linksContainer}\n            onPress={() => onPressExtraHearts()}\n        >\n            <Image\n                style={styles.pictogram}\n                source={extraHeart}\n            />\n            <Text style={styles.extraHeartsText}>x 6</Text>\n        </TouchableOpacity>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n\n    // Game over\n    gameOver: {\n        alignSelf: 'center',\n        fontSize: 25,\n        fontWeight: \"bold\",\n        margin: 5\n    },\n\n    // Share etc links\n    linksContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n    pictogram: {\n        // flex: 1,\n        minHeight: 30,\n        maxWidth: 30,\n        aspectRatio: 512 / 512,\n        marginHorizontal: 10,\n    },\n\n    // Extra hearts\n    linksContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginRight: 10\n    },\n    extraHeartsText: {\n        fontSize: 22,\n        fontWeight: \"bold\"\n    },\n\n});\n","import { loadItem, storeItem } from \"./DataStorage\"\n\nvar lastRefreshed;\n\nfunction setLastRefreshed(lastRefreshedFromStorage) {\n    lastRefreshed = lastRefreshedFromStorage;\n}\n\nasync function refreshVersion() {\n    var now = new Date();\n    await loadItem(\"lastRefreshed\", null, setLastRefreshed);\n    if (lastRefreshed != null) {\n        var minutesSinceRefresh = Math.ceil((now - new Date(lastRefreshed)) / 1000 / 60);\n    }\n    if (lastRefreshed == null || minutesSinceRefresh > 60) {\n        storeItem(\"lastRefreshed\", new Date());\n        window.location.reload(false);\n    }\n}\n\nexport default refreshVersion;","export const level1Name = \"GuessFlagScreen\";\nexport const bonusLevel1Name = \"BonusLevelScreen\";\nexport const level2Name = \"GuessCapitalScreen\";\nexport const level3Name = \"GuessShapeScreen\";\n\nexport function navigateToLevel1(navigation) {\n    navigation.navigate(level1Name)\n}\n\nexport function navigateToBonusLevel1(navigation) {\n    navigation.navigate(bonusLevel1Name)\n}\n\nexport function navigateToLevel2(navigation) {\n    navigation.navigate(level2Name)\n}\n\nexport function navigateToLevel3(navigation) {\n    navigation.navigate(level3Name)\n}\n","import { StyleSheet, Text, Image, TouchableOpacity } from 'react-native';\n\nimport extraHeart from '../img/heart-2.png'\nimport { maxHearts } from './Hearts';\n\nexport function grantExtraHeart(extraHearts, setExtraHearts) {\n    let newExtraHearts = extraHearts < maxHearts ? extraHearts + 1 : extraHearts;\n    setExtraHearts(newExtraHearts);\n    return newExtraHearts;\n}\n\nexport function ExtraHearts({ hearts, setHearts, extraHearts, setExtraHearts, victory }) {\n\n    function onPressExtraHearts() {\n        if (extraHearts > 0 && hearts < maxHearts && victory != true) {\n            setHearts(hearts + 1);\n            setExtraHearts(extraHearts - 1);\n        }\n    }\n\n    return (\n        <TouchableOpacity\n            style={styles.linksContainer}\n            onPress={() => onPressExtraHearts()}\n            disabled={victory == true || hearts == null}\n        >\n            <Image\n                style={styles.pictogram}\n                source={extraHeart}\n            />\n            <Text style={styles.extraHeartsText}>x {extraHearts}</Text>\n        </TouchableOpacity>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n    // Game over\n    gameOver: {\n        alignSelf: 'center',\n        fontSize: 25,\n        fontWeight: \"bold\",\n        margin: 5\n    },\n\n    // Share etc links\n    linksContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n    pictogram: {\n        // flex: 1,\n        minHeight: 30,\n        aspectRatio: 512 / 512,\n        marginHorizontal: 10,\n    },\n\n    // Extra hearts\n    linksContainer: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginRight: 10\n    },\n    extraHeartsText: {\n        fontSize: 22,\n        fontWeight: \"bold\"\n    },\n\n});\n","import { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\n\nimport { GlobeLink, ShareButton } from './GameOver';\nimport { ExtraHearts } from './ExtraHearts';\n\nimport leftArrow from '../img/left-arrow.png'\nimport rightArrow from '../img/right-arrow.png'\nimport bonus from '../img/bonus.png'\n\nexport function HeaderTitle({ levelName }) {\n    return (\n        <Text style={styles.headerTitle}>GEODLE{'\\n'} {levelName}</Text>\n    )\n}\n\nexport function HeaderLeft({ navigation, navigateBack, bonusLevelAvailable, navigateToBonusLevel, country, showGlobe }) {\n    return (\n        <View style={styles.rowContainer}>\n            {bonusLevelAvailable ?\n                <BonusLevelArrow\n                    navigation={navigation}\n                    navigateToBonusLevel={navigateToBonusLevel}\n                    navigateBack={navigation.goBack}\n                />\n                :\n                navigateBack != null ?\n                    <TouchableOpacity\n                        style={styles.navigationArrowContainer}\n                        onPress={() => navigateBack(navigation)}\n                    >\n                        <Image\n                            style={styles.previousLevelArrow}\n                            source={leftArrow}\n                        />\n                    </TouchableOpacity>\n                    :\n                    null\n            }\n            {showGlobe == true ?\n                <GlobeLink country={country} />\n                :\n                null\n            }\n            < ShareButton />\n        </View>\n    )\n}\nexport function HeaderRight({ victory, navigation, navigateToNextLevel, hearts, setHearts, extraHearts, setExtraHearts }) {\n    return (\n        <View style={styles.rowContainer}>\n            {victory && navigateToNextLevel != null ?\n                <NextLevelArrow\n                    navigation={navigation}\n                    navigateToNextLevel={navigateToNextLevel}\n                />\n                :\n                <ExtraHearts\n                    hearts={hearts}\n                    setHearts={setHearts}\n                    extraHearts={extraHearts}\n                    setExtraHearts={setExtraHearts}\n                    victory={victory}\n                />\n            }\n        </View>\n    )\n}\n\nexport function NextLevelArrow({ navigation, navigateToNextLevel }) {\n    return (\n        <View>\n            <TouchableOpacity\n                style={styles.navigationArrowContainer}\n                onPress={() => navigateToNextLevel(navigation)}\n            >\n                <Text style={styles.nextLevelText}>\n                    NEXT{'\\n'}LEVEL\n                </Text>\n                <Image\n                    style={styles.nextLevelArrow}\n                    source={rightArrow}\n                />\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nexport function BonusLevelArrow({ navigation, navigateToBonusLevel }) {\n    return (\n        <View>\n            <TouchableOpacity\n                style={styles.navigationArrowContainer}\n                onPress={() => navigateToBonusLevel(navigation)}\n            >\n                <Image\n                    style={styles.pictogram}\n                    source={bonus}\n                />\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    rowContainer: {\n        flexDirection: 'row',\n    },\n    previousLevelArrow: {\n        flex: 1,\n        minHeight: 25,\n        aspectRatio: 512 / 512,\n        marginLeft: 20,\n    },\n    pictogram: {\n        minHeight: 30,\n        aspectRatio: 512 / 512,\n        marginHorizontal: 10,\n    },\n    headerTitle: {\n        fontWeight: 'bold',\n        fontSize: 18,\n        marginHorizontal: 50,\n        textAlign: 'center'\n    },\n    navigationArrowContainer: {\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    nextLevelText: {\n        fontWeight: 'bold'\n    },\n    nextLevelArrow: {\n        flex: 1,\n        minHeight: 25,\n        aspectRatio: 512 / 512,\n        marginRight: 20,\n    },\n})\n\n","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View, Text, TouchableOpacity, Image } from 'react-native';\nimport { useEffect, useState, useLayoutEffect } from 'react';\n\nimport Hearts from '../components/Hearts';\n\nimport defaultIcon from '../img/government.png';\nimport { GameOverMessage, GlobeLink, ShareButton } from '../components/GameOver';\nimport { loadGlobalItem, loadItem, storeGlobalItem, storeItem } from '../util/DataStorage';\nimport refreshVersion from '../util/AppVersion';\nimport { countryList } from '../data/CountryList';\nimport { gameNumber } from '../util/GameNumber';\nimport leftArrow from '../img/left-arrow.png'\nimport { navigateToLevel1, navigateToLevel3 } from '../util/Navigation';\nimport { HeaderLeft, NextLevelArrow } from '../components/Header';\nimport { ExtraHearts, grantExtraHeart } from '../components/ExtraHearts';\n\nexport default function GuessCapitalScreen({ navigation }) {\n\n  const defaultCountry = {\n    name: \"Default Country\",\n    capital: {\n      name: \"Capital\",\n      icon: defaultIcon\n    }\n  }\n\n  const [country, setCountry] = useState(countryList.filter(country => country.flag != null)[gameNumber]);\n  const [hearts, setHearts] = useState();\n  const [extraHearts, setExtraHearts] = useState();\n  const [icon, setIcon] = useState(defaultIcon);\n  const [correctCharacters, setCorrectCharacters] = useState([]);\n  const [almostCharacters, setAlmostCharacters] = useState([]);\n  const [wrongCharacters, setWrongCharacters] = useState([]);\n  const [victory, setVictory] = useState(false);\n  const [level2Guesses, setLevel2Guesses] = useState([]);\n\n  const [char1, setChar1] = useState('');\n  const [char2, setChar2] = useState('');\n  const [char3, setChar3] = useState('');\n  const [char4, setChar4] = useState('');\n  const [char5, setChar5] = useState('');\n  const [char6, setChar6] = useState('');\n  const [char7, setChar7] = useState('');\n  const [char8, setChar8] = useState('');\n  const [char9, setChar9] = useState('');\n  const [char10, setChar10] = useState('');\n  const [char11, setChar11] = useState('');\n  const [char12, setChar12] = useState('');\n  const [char13, setChar13] = useState('');\n  const [char14, setChar14] = useState('');\n  const [char15, setChar15] = useState('');\n  const [char16, setChar16] = useState('');\n  const [char17, setChar17] = useState('');\n  const [char1Guessed, setChar1Guessed] = useState(false);\n  const [char2Guessed, setChar2Guessed] = useState(false);\n  const [char3Guessed, setChar3Guessed] = useState(false);\n  const [char4Guessed, setChar4Guessed] = useState(false);\n  const [char5Guessed, setChar5Guessed] = useState(false);\n  const [char6Guessed, setChar6Guessed] = useState(false);\n  const [char7Guessed, setChar7Guessed] = useState(false);\n  const [char8Guessed, setChar8Guessed] = useState(false);\n  const [char9Guessed, setChar9Guessed] = useState(false);\n  const [char10Guessed, setChar10Guessed] = useState(false);\n  const [char11Guessed, setChar11Guessed] = useState(false);\n  const [char12Guessed, setChar12Guessed] = useState(false);\n  const [char13Guessed, setChar13Guessed] = useState(false);\n  const [char14Guessed, setChar14Guessed] = useState(false);\n  const [char15Guessed, setChar15Guessed] = useState(false);\n  const [char16Guessed, setChar16Guessed] = useState(false);\n  const [char17Guessed, setChar17Guessed] = useState(false);\n\n  const charArray = [\n    { char: char1, setChar: setChar1, charGuessed: char1Guessed, setCharGuessed: setChar1Guessed },\n    { char: char2, setChar: setChar2, charGuessed: char2Guessed, setCharGuessed: setChar2Guessed },\n    { char: char3, setChar: setChar3, charGuessed: char3Guessed, setCharGuessed: setChar3Guessed },\n    { char: char4, setChar: setChar4, charGuessed: char4Guessed, setCharGuessed: setChar4Guessed },\n    { char: char5, setChar: setChar5, charGuessed: char5Guessed, setCharGuessed: setChar5Guessed },\n    { char: char6, setChar: setChar6, charGuessed: char6Guessed, setCharGuessed: setChar6Guessed },\n    { char: char7, setChar: setChar7, charGuessed: char7Guessed, setCharGuessed: setChar7Guessed },\n    { char: char8, setChar: setChar8, charGuessed: char8Guessed, setCharGuessed: setChar8Guessed },\n    { char: char9, setChar: setChar9, charGuessed: char9Guessed, setCharGuessed: setChar9Guessed },\n    { char: char10, setChar: setChar10, charGuessed: char10Guessed, setCharGuessed: setChar10Guessed },\n    { char: char11, setChar: setChar11, charGuessed: char11Guessed, setCharGuessed: setChar11Guessed },\n    { char: char12, setChar: setChar12, charGuessed: char12Guessed, setCharGuessed: setChar12Guessed },\n    { char: char13, setChar: setChar13, charGuessed: char13Guessed, setCharGuessed: setChar13Guessed },\n    { char: char14, setChar: setChar14, charGuessed: char14Guessed, setCharGuessed: setChar14Guessed },\n    { char: char15, setChar: setChar15, charGuessed: char15Guessed, setCharGuessed: setChar15Guessed },\n    { char: char16, setChar: setChar16, charGuessed: char16Guessed, setCharGuessed: setChar16Guessed },\n    { char: char17, setChar: setChar17, charGuessed: char17Guessed, setCharGuessed: setChar17Guessed },\n  ]\n\n  function setCharArray(newCharArray) {\n    for (let i = 0; i < charArray.length; i++) {\n      if (capitalName.charAt(i) == \" \") {\n        charArray[i].setChar(\" \");\n        charArray[i].setCharGuessed(true);\n      } else if (capitalName.charAt(i) == \"'\") {\n        charArray[i].setChar(\"'\");\n        charArray[i].setCharGuessed(true);\n      } else {\n        charArray[i].setChar(newCharArray[i].char);\n        charArray[i].setCharGuessed(newCharArray[i].charGuessed);\n      }\n    }\n  }\n\n  const capitalName = (country.capital?.name != null ? country.capital.name : defaultCountry.capital.name).toUpperCase();\n\n  function Header() {\n    return (\n      <Text style={styles.headerTitle}>GEODLE{'\\n'} Level 2</Text>\n    )\n  }\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: 'GEODLE\\n Level 2',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n      headerBackButtonMenuEnabled: false,\n      headerTitle: () => <Header />,\n      headerRight: () => (\n        victory && country.shape != null ?\n          <View style={styles.rowContainer}>\n            <NextLevelArrow navigation={navigation}\n              navigateToNextLevel={navigateToLevel3} />\n          </View>\n          :\n          <ExtraHearts\n            hearts={hearts}\n            setHearts={setHearts}\n            extraHearts={extraHearts}\n            setExtraHearts={setExtraHearts}\n            victory={victory}\n          />\n      ),\n      headerLeft: () =>\n        <HeaderLeft\n          country={country}\n          showGlobe={victory}\n          navigation={navigation}\n          navigateBack={navigateToLevel1}\n        />\n    }, [navigation]);\n  })\n\n  // Force app refresh every now and then to retire outdated code\n  useEffect(() => {\n    refreshVersion();\n  })\n\n  useEffect(() => {\n    loadGlobalItem(\"extraHearts\", 0, setExtraHearts);\n    loadItem(\"charArray\", charArray, setCharArray);\n    loadItem(\"correctCharacters\", [], setCorrectCharacters);\n    loadItem(\"almostCharacters\", [], setAlmostCharacters);\n    loadItem(\"wrongCharacters\", [], setWrongCharacters);\n    loadItem(\"level2Guesses\", [], setLevel2Guesses);\n    loadItem(\"hearts\", 6, setHearts);\n    loadItem(\"level2Victory\", false, setVictory);\n  }, []);\n\n  useEffect(() => {\n    storeItem(\"charArray\", charArray);\n    storeItem(\"correctCharacters\", correctCharacters);\n    storeItem(\"almostCharacters\", almostCharacters);\n    storeItem(\"wrongCharacters\", wrongCharacters);\n    storeGlobalItem(\"extraHearts\", extraHearts);\n    storeItem(\"hearts\", hearts);\n    storeItem(\"level2Victory\", victory);\n    storeItem(\"level2Guesses\", level2Guesses);\n  }, [victory, hearts]);\n\n  // Verify if the corresponding character keyboard key is not already guessed\n  function isKeyEnabled(char) {\n    if (victory || hearts == 0 || wrongCharacters.includes(char)) {\n      return false;\n    } else if (correctCharacters.includes(char) && isCharacterGuessedInAllOccurrences(char)) {\n      return false;\n    }\n    return true;\n  }\n\n  // Keyboard press\n  const onKeyboardPress = (char) => {\n    if (isKeyEnabled(char)) {\n      for (let i = 0; i < capitalName.length; i++) {\n        if (charArray[i].char == '' && capitalName.length > i && !charArray[i].charGuessed) {\n          charArray[i].setChar(char);\n          break;\n        }\n      }\n    }\n  }\n\n  // Keyboard \"<-\" back button\n  const onKeyboardPressBack = () => {\n    for (let i = charArray.length - 1; i >= 0; i--) {\n      if (charArray[i].char != '' && capitalName.length > i - 1 && !charArray[i].charGuessed) {\n        charArray[i].setChar('');\n        break;\n      }\n    }\n  }\n\n  function areAllCharactersGuessed() {\n    return correctCharacters.length == capitalName.replaceAll(\" \", \"\").replaceAll(\"'\", \"\").length\n  }\n\n  function processCharacterGuess(charIndex, char, charSetter, charGuessed, charGuessedSetter) {\n    if (capitalName.length > charIndex && !charGuessed) {\n      if (char == capitalName.charAt(charIndex)) {\n        charGuessedSetter(true);\n        correctCharacters.push(char);\n      } else if (char != \"\") {\n        if (capitalName.indexOf(char) > -1) {\n          almostCharacters.push(char);\n        } else {\n          wrongCharacters.push(char);\n        }\n        charSetter('');\n      }\n    }\n    if (areAllCharactersGuessed()) {\n      setVictory(true);\n      grantExtraHeart(extraHearts, setExtraHearts);\n\n      // Redirect to the next level\n      if (country.shape != null) {\n        setTimeout(() => {\n          navigateToLevel3(navigation);\n        }, 1000)\n      }\n    }\n  }\n\n  function charactersEntered() {\n    return charArray.filter((character) => { return character.char != '' }).length;\n  }\n\n\n  function onPressGuess() {\n    if (charactersEntered() >= capitalName.length) {  // ignore Guess button until every character is filled in\n      const oldCorrect = [...correctCharacters];\n      const oldAlmost = [...almostCharacters];\n\n      for (let i = 0; i < capitalName.length; i++) {\n        processCharacterGuess(i, charArray[i].char, charArray[i].setChar, charArray[i].charGuessed, charArray[i].setCharGuessed);\n      }\n      if (!areAllCharactersGuessed()) {\n        setHearts(hearts - 1);\n      }\n\n      if (areAllCharactersGuessed()) {\n        level2Guesses.push(\"✅\");\n      } else if (correctCharacters.length > oldCorrect.length) {\n        level2Guesses.push(\"🟩\");\n      } else if (almostCharacters.length > oldAlmost.length) {\n        level2Guesses.push(\"🟧\");\n      } else {\n        level2Guesses.push(\"⬜️\");\n      }\n    }\n  }\n\n  // Remove the character pressed in the word\n  function onPressWordChar(index) {\n    if (!charArray[index].charGuessed) {\n      charArray[index].setChar('');\n    }\n  }\n\n  function isCharacterGuessedInAllOccurrences(char) {\n    return capitalName.split(char).length - 1 == correctCharacters.filter(correct => correct === char).length;\n  }\n\n  function getConditionalKeyboardStyles(char) {\n    if (correctCharacters.includes(char)) {\n      return isCharacterGuessedInAllOccurrences(char) ? styles.correct : styles.almost;\n    } else if (almostCharacters.includes(char)) {\n      return styles.almost;\n    } else if (wrongCharacters.includes(char)) {\n      return styles.wrong;\n    }\n  }\n\n  function getConditionalWordStyles(index) {\n    var conditionalWordStyles = [];\n    if (capitalName.charAt(index) == \" \" || capitalName.charAt(index) == \"'\") {\n      conditionalWordStyles.push(styles.wordCharacterSpace);\n    } else {\n      conditionalWordStyles.push(styles.wordCharacterContainer);\n      if (charArray[index].charGuessed) {\n        conditionalWordStyles.push(styles.correct);\n      }\n    }\n    return conditionalWordStyles;\n  }\n\n  return (\n    <View style={styles.container}>\n\n      {/* Icon */}\n      {icon != null ?\n        <Image\n          style={styles.icon}\n          resizeMode='center'\n          source={icon}\n        />\n        :\n        null\n      }\n\n      <Hearts hearts={hearts} />\n\n      <View style={styles.hintContainer}>\n        <Text style={styles.hintText}>Can you guess the capital of {country.name}?</Text>\n      </View>\n\n      {/* The word */}\n      <View style={styles.wordContainer}>\n        {capitalName.length > 0 ?\n          <TouchableOpacity style={getConditionalWordStyles(0)}\n            onPress={() => onPressWordChar(0)}>\n            <Text style={styles.wordCharacter}>{char1}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 1 ?\n          <TouchableOpacity style={getConditionalWordStyles(1)}\n            onPress={() => onPressWordChar(1)}>\n            <Text style={styles.wordCharacter}>{char2}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 2 ?\n          <TouchableOpacity style={getConditionalWordStyles(2)}\n            onPress={() => onPressWordChar(2)}>\n            <Text style={styles.wordCharacter}>{char3}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 3 ?\n          <TouchableOpacity style={getConditionalWordStyles(3)}\n            onPress={() => onPressWordChar(3)}>\n            <Text style={styles.wordCharacter}>{char4}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 4 ?\n          <TouchableOpacity style={getConditionalWordStyles(4)}\n            onPress={() => onPressWordChar(4)}>\n            <Text style={styles.wordCharacter}>{char5}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 5 ?\n          <TouchableOpacity style={getConditionalWordStyles(5)}\n            onPress={() => onPressWordChar(5)}>\n            <Text style={styles.wordCharacter}>{char6}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 6 ?\n          <TouchableOpacity style={getConditionalWordStyles(6)}\n            onPress={() => onPressWordChar(6)}>\n            <Text style={styles.wordCharacter}>{char7}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 7 ?\n          <TouchableOpacity style={getConditionalWordStyles(7)}\n            onPress={() => onPressWordChar(7)}>\n            <Text style={styles.wordCharacter}>{char8}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 8 ?\n          <TouchableOpacity style={getConditionalWordStyles(8)}\n            onPress={() => onPressWordChar(8)}>\n            <Text style={styles.wordCharacter}>{char9}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 9 ?\n          <TouchableOpacity style={getConditionalWordStyles(9)}\n            onPress={() => onPressWordChar(9)}>\n            <Text style={styles.wordCharacter}>{char10}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 10 ?\n          <TouchableOpacity style={getConditionalWordStyles(10)}\n            onPress={() => onPressWordChar(10)}>\n            <Text style={styles.wordCharacter}>{char11}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 11 ?\n          <TouchableOpacity style={getConditionalWordStyles(11)}\n            onPress={() => onPressWordChar(11)}>\n            <Text style={styles.wordCharacter}>{char12}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 12 ?\n          <TouchableOpacity style={getConditionalWordStyles(12)}\n            onPress={() => onPressWordChar(12)}>\n            <Text style={styles.wordCharacter}>{char13}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 13 ?\n          <TouchableOpacity style={getConditionalWordStyles(13)}\n            onPress={() => onPressWordChar(13)}>\n            <Text style={styles.wordCharacter}>{char14}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 14 ?\n          <TouchableOpacity style={getConditionalWordStyles(14)}\n            onPress={() => onPressWordChar(14)}>\n            <Text style={styles.wordCharacter}>{char15}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 15 ?\n          <TouchableOpacity style={getConditionalWordStyles(15)}\n            onPress={() => onPressWordChar(15)}>\n            <Text style={styles.wordCharacter}>{char16}</Text>\n          </TouchableOpacity>\n          : null}\n        {capitalName.length > 16 ?\n          <TouchableOpacity style={getConditionalWordStyles(16)}\n            onPress={() => onPressWordChar(16)}>\n            <Text style={styles.wordCharacter}>{char17}</Text>\n          </TouchableOpacity>\n          : null}\n      </View>\n\n      {/* Keyboard */}\n      <View style={styles.keyboardContainer}>\n        <View style={styles.keyboardRowContainer}>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"Q\")]}\n            onPress={() => onKeyboardPress(\"Q\")}>\n            <Text style={styles.keyboardCharacter}>Q</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"W\")]}\n            onPress={() => onKeyboardPress(\"W\")}>\n            <Text style={styles.keyboardCharacter}>W</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"E\")]}\n            onPress={() => onKeyboardPress(\"E\")}>\n            <Text style={styles.keyboardCharacter}>E</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"R\")]}\n            onPress={() => onKeyboardPress(\"R\")}>\n            <Text style={styles.keyboardCharacter}>R</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"T\")]}\n            onPress={() => onKeyboardPress(\"T\")}>\n            <Text style={styles.keyboardCharacter}>T</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"Y\")]}\n            onPress={() => onKeyboardPress(\"Y\")}>\n            <Text style={styles.keyboardCharacter}>Y</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"U\")]}\n            onPress={() => onKeyboardPress(\"U\")}>\n            <Text style={styles.keyboardCharacter}>U</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"I\")]}\n            onPress={() => onKeyboardPress(\"I\")}>\n            <Text style={styles.keyboardCharacter}>I</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"O\")]}\n            onPress={() => onKeyboardPress(\"O\")}>\n            <Text style={styles.keyboardCharacter}>O</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"P\")]}\n            onPress={() => onKeyboardPress(\"P\")}>\n            <Text style={styles.keyboardCharacter}>P</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.keyboardRowContainer}>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"A\")]}\n            onPress={() => onKeyboardPress(\"A\")}>\n            <Text style={styles.keyboardCharacter}>A</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"S\")]}\n            onPress={() => onKeyboardPress(\"S\")}>\n            <Text style={styles.keyboardCharacter}>S</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"D\")]}\n            onPress={() => onKeyboardPress(\"D\")}>\n            <Text style={styles.keyboardCharacter}>D</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"F\")]}\n            onPress={() => onKeyboardPress(\"F\")}>\n            <Text style={styles.keyboardCharacter}>F</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"G\")]}\n            onPress={() => onKeyboardPress(\"G\")}>\n            <Text style={styles.keyboardCharacter}>G</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"H\")]}\n            onPress={() => onKeyboardPress(\"H\")}>\n            <Text style={styles.keyboardCharacter}>H</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"J\")]}\n            onPress={() => onKeyboardPress(\"J\")}>\n            <Text style={styles.keyboardCharacter}>J</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"K\")]}\n            onPress={() => onKeyboardPress(\"K\")}>\n            <Text style={styles.keyboardCharacter}>K</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"L\")]}\n            onPress={() => onKeyboardPress(\"L\")}>\n            <Text style={styles.keyboardCharacter}>L</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.keyboardRowContainer}>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"Z\")]}\n            onPress={() => onKeyboardPress(\"Z\")}>\n            <Text style={styles.keyboardCharacter}>Z</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"X\")]}\n            onPress={() => onKeyboardPress(\"X\")}>\n            <Text style={styles.keyboardCharacter}>X</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"C\")]}\n            onPress={() => onKeyboardPress(\"C\")}>\n            <Text style={styles.keyboardCharacter}>C</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"V\")]}\n            onPress={() => onKeyboardPress(\"V\")}>\n            <Text style={styles.keyboardCharacter}>V</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"B\")]}\n            onPress={() => onKeyboardPress(\"B\")}>\n            <Text style={styles.keyboardCharacter}>B</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"N\")]}\n            onPress={() => onKeyboardPress(\"N\")}>\n            <Text style={styles.keyboardCharacter}>N</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, getConditionalKeyboardStyles(\"M\")]}\n            onPress={() => onKeyboardPress(\"M\")}>\n            <Text style={styles.keyboardCharacter}>M</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.keyboardCharacterContainer, styles.wideCharacter]}\n            onPress={() => onKeyboardPressBack()}>\n            <Text style={styles.keyboardCharacter}>←</Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* Guess button, Victory or Game Over Message  */}\n        <View style={styles.keyboardRowContainer}>\n          {victory || hearts == 0 ?\n            <GameOverMessage victory={victory} />\n            :\n            <TouchableOpacity style={styles.guessButtonContainer}\n              onPress={() => onPressGuess()}>\n              <Text style={styles.guessButton}>GUESS</Text>\n            </TouchableOpacity>\n          }\n        </View>\n\n      </View>\n\n      <StatusBar style=\"auto\" />\n\n    </View >\n  );\n}\n\nconst styles = StyleSheet.create({\n  // Navigation header\n  headerTitle: {\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  nextLevelArrowContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  nextLevelText: {\n    fontWeight: 'bold'\n  },\n  nextLevelArrow: {\n    flex: 1,\n    minHeight: 25,\n    aspectRatio: 512 / 512,\n    marginRight: 20,\n  },\n  previousLevelArrow: {\n    flex: 1,\n    minHeight: 25,\n    aspectRatio: 512 / 512,\n    marginLeft: 20,\n  },\n  rowContainer: {\n    flexDirection: 'row'\n  },\n\n  container: {\n    flex: 1,\n    width: '100%',\n    maxWidth: 500,\n    alignSelf: 'center'\n  },\n  icon: {\n    flex: 1,\n    marginTop: 20,\n  },\n\n  hintContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    maxHeight: 30,\n    marginBottom: 10,\n  },\n  hintText: {\n    fontSize: 20\n  },\n\n  wordContainer: {\n    flex: 2,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    maxHeight: 40,\n    flexWrap: 'wrap'\n  },\n  wordCharacterSpace: {\n    flex: 1,\n    margin: 5,\n    width: 30,\n    maxWidth: 30,\n    height: 30\n  },\n  wordCharacterContainer: {\n    flex: 1,\n    margin: 5,\n    borderWidth: 1,\n    borderWidth: 2,\n    width: 30,\n    maxWidth: 30,\n    height: 30\n  },\n  wordCharacter: {\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  keyboardContainer: {\n    flex: 2,\n    alignSelf: 'center',\n    maxHeight: 225,\n    minHeight: 225,\n    paddingBottom: 10,\n    marginTop: 50,\n  },\n  keyboardRowContainer: {\n    flex: 1,\n    alignSelf: 'center',\n    flexDirection: 'row'\n  },\n  keyboardCharacterContainer: {\n    flex: 1,\n    marginHorizontal: 3,\n    borderWidth: 2,\n    maxWidth: 30,\n    minWidth: 30,\n    height: 40,\n    justifyContent: 'center',\n  },\n  keyboardSpaceContainer: {\n    flex: 1,\n    marginHorizontal: 3,\n    width: 60,\n    height: 40,\n    justifyContent: 'center',\n  },\n  keyboardCharacter: {\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  wideCharacter: {\n    minWidth: 60\n  },\n  correct: {\n    backgroundColor: '#7fd672'\n  },\n  almost: {\n    backgroundColor: '#dec83a'\n  },\n  wrong: {\n    backgroundColor: '#aaa6ad'\n  },\n  guessButtonContainer: {\n    alignSelf: 'center',\n    minWidth: 275,\n    minHeight: 40,\n    maxHeight: 40,\n    borderWidth: 2,\n    justifyContent: 'center'\n  },\n  guessButton: {\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  gameOverContainer: {\n    flex: 2,\n    alignSelf: 'center',\n  },\n});\n","\nimport { StyleSheet, Image } from 'react-native';\n\n\nexport default function Flag({ flag, flagAspectRatio }) {\n\n    function getAspectRatio() {\n        return flagAspectRatio == null ? { aspectRatio: 1.5 } : { aspectRatio: flagAspectRatio }\n    }\n\n    return (\n        flag != null ?\n            <Image\n                style={[styles.flag, getAspectRatio()]}\n                resizeMode='stretch'\n                source={flag}\n            />\n            :\n            null\n    );\n}\n\nconst styles = StyleSheet.create({\n\n    flag: {\n        flex: 9,\n        alignSelf: 'center',\n        marginTop: 20\n    }\n\n});\n","import { FlatList, StyleSheet, Text, View } from 'react-native';\n\nexport default function Guesses({ guesses }) {\n\n  return (\n\n    <View style={styles.guessesContainer}>\n      <FlatList\n        data={guesses}\n        renderItem={({ item }) =>\n          <View style={styles.guessContainer}>\n            <Text style={styles.guessName}>{item.name}</Text>\n            <Text style={styles.guessDirection}>{item.direction}</Text>\n            <Text style={styles.guessDistance}>{item.distance}</Text>\n          </View>\n        }\n        keyExtractor={(item, index) => index.toString()}  // This is just to remove keys warning\n      />\n    </View>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n\n  // Guesses\n  guessesContainer: {\n    flex: 9,\n    minWidth: '80%',\n    minHeight: 100,\n    marginLeft: 10,\n    marginTop: 10,\n  },\n  guessContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  guessFlag: {\n    flex: 1,\n    fontSize: 16,\n  },\n  guessName: {\n    flex: 7,\n    fontSize: 18,\n  },\n  guessDirection: {\n    flex: 1,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  guessDistance: {\n    flex: 3,\n    fontSize: 18,\n  }\n\n});\n","import { FlatList, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\n\nexport default function Autocomplete({ autocompleteData, enterGuess }) {\n\n    return (\n\n        <View style={styles.inputWithAutocompleteContainer}>\n            <View style={styles.autocompleteContainer}>\n                {autocompleteData?.length == 0 ?\n                    null\n                    :\n                    <FlatList\n                        data={autocompleteData}\n                        renderItem={({ item }) =>\n                            <TouchableOpacity\n                                onPress={() => enterGuess(item.name)}\n                            >\n                                <Text style={styles.autocompleteItem}>{item.name}</Text>\n                            </TouchableOpacity>\n                        }\n                        keyboardShouldPersistTaps={'handled'} // Avoid keyboard flickering up and down when a country is selected\n                        keyExtractor={(item, index) => index.toString()}  // This is just to remove keys warning\n                    />\n                }\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n    gameContainer: {\n        flex: 9,\n        alignItems: 'center',\n    },\n\n    // Autocomplete\n    inputWithAutocompleteContainer: {\n        flex: 4,\n        padding: 10,\n        paddingBottom: 20,\n        minHeight: 50,\n        width: '100%',\n        justifyContent: 'flex-end',\n        maxHeight: 50\n    },\n    autocompleteContainer: {\n        maxHeight: 160\n    },\n    autocompleteItem: {\n        fontSize: 30\n    },\n\n    // Input\n    inputContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        maxHeight: 50,\n        minHeight: 40,\n        justifyContent: 'center',\n        marginBottom: 20\n    },\n\n    input: {\n        flex: 8,\n        borderWidth: 1,\n        fontSize: 25,\n        maxWidth: '90%',\n    },\n\n    //  Send\n    sendButtonContainer: {\n        flex: 2,\n        minWidth: 60,\n        alignSelf: 'center',\n        paddingLeft: 5\n    },\n\n    // Share etc links\n    linksContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        margin: 20\n    },\n    shareButton: {\n        flex: 1,\n        minHeight: 30,\n        aspectRatio: 512 / 512,\n        marginHorizontal: 20,\n    }\n\n});\n","\nconst coordNames = [\"→\", \"↘\", \"↓\", \"↙\", \"←\", \"↖\", \"↑\", \"↗\", \"→\"];\n\nconst mapWidth = 430;\nconst mapHeight = 332;\n\nfunction deg2rad(deg) {\n    return deg * (Math.PI / 180)\n}\n\nexport function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n    var R = 6371; // Radius of the earth in km\n    var dLat = deg2rad(lat2 - lat1);  // deg2rad below\n    var dLon = deg2rad(lon2 - lon1);\n    var a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n        ;\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n    return d;\n}\n\nfunction latLonToXY(latitude, longitude) {\n\n    // get x value\n    var x = (longitude + 180) * (mapWidth / 360)\n\n    // convert from degrees to radians\n    var latRad = latitude * Math.PI / 180;\n\n    // get y value\n    var mercN = Math.log(Math.tan((Math.PI / 4) + (latRad / 2)));\n    var y = (mapHeight / 2) - (mapWidth * mercN / (2 * Math.PI));\n    \n    return [x, y];\n}\n\nexport function getBearingFromLatLon(lat1, lon1, lat2, lon2) {\n    var [x1, y1] = latLonToXY(lat1, lon1);\n    var [x2, y2] = latLonToXY(lat2, lon2);\n\n    // Flip the country to the other side of the map if it's closer this way\n    if (Math.abs(x1 - x2) > mapWidth / 2) {\n        if (x1 > x2) {\n            x1 = x1 - mapWidth;\n        } else {\n            x2 = x2 - mapWidth;\n        }\n    }\n\n    // Calculate the angle between the two countries\n    var radians = Math.atan2(y2 - y1, x2 - x1); // in radians\n    var compassReading = radians * (180 / Math.PI); // in degrees [-180, 180], 0 is East\n    if (compassReading < 0) {   // in degreed [0, 360], 0 is East\n        compassReading += 360;\n    }\n    \n    var coordIndex = Math.round(compassReading / 45);\n\n    return coordNames[coordIndex];\n}","export const hints = [\n    {\n        code: \"GQ\",\n        text: \"The country used to be known as: \",\n        options: [\n            { text: \"Italian Guinea\" },\n            { text: \"Portuguese Guinea\" },\n            { text: \"Spanish Guinea\", isCorrect: true },\n            { text: \"German Guinea\" }\n        ]\n    },\n    {\n        code: \"BG\",\n        text: \"The country is a birthplace of this alphabet: \",\n        options: [\n            { text: \"Cyrillic: а б в г д е\", isCorrect: true },\n            { text: \"Greek:  α β γ δ ε ζ\" },\n            { text: \"Arabic:  ح ج ث ت ب\" },\n            { text: \"Hebrew: א ב ג ד ה ו\" }\n        ]\n    },\n    {\n        code: \"JP\",\n        text: \"The country's capital is:\",\n        options: [\n            { text: \"World's Smallest Capital\" },\n            { text: \"World's Most Dangerous City\" },\n            { text: \"World's Most Populated City\", isCorrect: true },\n            { text: \"World's Least Visited Capital\" }\n        ]\n    },\n    {\n        code: \"TN\",\n        text: \"Cape Angela, located in this country, is:\",\n        options: [\n            { text: \"The easternmost point of Asia\" },\n            { text: \"The nothernmost point of Africa\", isCorrect: true },\n            { text: \"The southernmost point of Europe\" },\n            { text: \"The highest point of Asia\" }\n        ]\n    },\n    {\n        code: \"CF\",\n        text: \"This country features:\",\n        options: [\n            { text: \"The highest point of Africa\" },\n            { text: \"The biggest lake in Africa\" },\n            { text: \"The 'geographical center' of Africa\", isCorrect: true },\n            { text: \"The lowest point of Africa\" }\n        ]\n    },\n    {\n        code: \"GS\",\n        text: \"This country was the site of:\",\n        options: [\n            { text: \"The southernmost battle ever fought\", isCorrect: true },\n            { text: \"XVIII Olympic Games\" },\n            { text: \"Soviet nuclear tests\" },\n            { text: \"A disastrous volcano eruption\" }\n        ]\n    },\n    {\n        code: \"MZ\",\n        text: \"The first European to visit the country was:\",\n        options: [\n            { text: \"🇫🇷 Jacques Marquette\" },\n            { text: \"🇪🇸 Christopher Columbus\" },\n            { text: \"🇬🇧 Sir John Hawkins\" },\n            { text: \"🇵🇹 Vasco da Gama\", isCorrect: true }\n        ]\n    },\n    {\n        code: \"AL\",\n        text: \"An acclaimed hero, Nobel prize winner and a saint of this country is:\",\n        options: [\n            { text: \"14th Dalai Lama\" },\n            { text: \"Mother Teresa\", isCorrect: true },\n            { text: \"Pope John Paul II\" },\n            { text: \"Дмитрий Муратов\" }\n        ]\n    },\n    {\n        code: \"YE\",\n        text: \"A world-known type of coffee is named after a city in this country:\",\n        options: [\n            { text: \"Mocha\", isCorrect: true },\n            { text: \"Cappuccino\" },\n            { text: \"Americano\" },\n            { text: \"Espresso\" }\n        ]\n    },\n    {\n        code: \"KZ\",\n        text: \"This country is the largest:\",\n        options: [\n            { text: \"landlocked country\", isCorrect: true },\n            { text: \"producent of cocoa\" },\n            { text: \"importer of coffee\" },\n            { text: \"catholic population\" }\n        ]\n    },\n    {\n        code: \"FR\",\n        text: \"This country is divided into:\",\n        options: [\n            { text: \"lands\" },\n            { text: \"cantons\" },\n            { text: \"departments\", isCorrect: true },\n            { text: \"voivodeships\" }\n        ]\n    },\n    {\n        code: \"SM\",\n        text: \"This country is the world's oldest:\",\n        options: [\n            { text: \"kingdom\" },\n            { text: \"republic\", isCorrect: true },\n            { text: \"federation\" },\n            { text: \"empire\" }\n        ]\n    },\n    {\n        code: \"VA\",\n        text: \"This country is the world's:\",\n        options: [\n            { text: \"smallest independent nation\", isCorrect: true },\n            { text: \"biggest enclave\" },\n            { text: \"least religious country\" },\n            { text: \"last dictatorship\" }\n        ]\n    },\n    {\n        code: \"RW\",\n        text: \"This country is described as the:\",\n        options: [\n            { text: \"'land of a thousand hills'\", isCorrect: true },\n            { text: \"'dead river land'\" },\n            { text: \"'land of the rolling sand'\" },\n            { text: \"'edge of the world'\" }\n        ]\n    },\n    {\n        code: \"DK\",\n        text: \"This country occupies:\",\n        options: [\n            { text: \"both banks of Nile\" },\n            { text: \"a whole continent\" },\n            { text: \"the peninsula of Jutland\", isCorrect: true },\n            { text: \"the Iberian peninsula\" }\n        ]\n    },\n    {\n        code: \"SR\",\n        text: \"This country is formerly known as:\",\n        options: [\n            { text: \"Irish Virgin Islands\" },\n            { text: \"Dutch Guiana\", isCorrect: true },\n            { text: \"Brasilia Italiana\" },\n            { text: \"Spanish Ghana\" }\n        ]\n    },\n    {\n        code: \"IR\",\n        text: \"This country's lake Urmia is:\",\n        options: [\n            { text: \"the largest lake in the Middle East\", isCorrect: true },\n            { text: \"the longest lake in Europe\" },\n            { text: \"the largest freshwater lake on Earth\" },\n            { text: \"the deepest lake of Asia\" }\n        ]\n    },\n    {\n        code: \"GT\",\n        text: \"This country once co-formed a federation of:\",\n        options: [\n            { text: \"United Provinces of Central America\", isCorrect: true },\n            { text: \"Greater Republics of Central America\" },\n            { text: \"United States of South America\" },\n            { text: \"USSR\" }\n        ]\n    },\n    {\n        code: \"SV\",\n        text: \"This country is the:\",\n        options: [\n            { text: \"smallest country in North America\" },\n            { text: \"biggest country in Africa\" },\n            { text: \"smallest country in Central America\", isCorrect: true },\n            { text: \"biggest country in Central America\" }\n        ]\n    },\n    {\n        code: \"KW\",\n        text: \"This country granted women the right to vote in:\",\n        options: [\n            { text: \"1950\" },\n            { text: \"1905\" },\n            { text: \"1985\" },\n            { text: \"2005\", isCorrect: true },\n        ]\n    },\n    {\n        code: \"DZ\",\n        text: \"This country is the:\",\n        options: [\n            { text: \"southernmost country in Africa\" },\n            { text: \"coldest country in Africa\" },\n            { text: \"flattest country in Europe\" },\n            { text: \"largest country in Africa\", isCorrect: true },\n        ]\n    },\n    {\n        code: \"CA\",\n        text: \"This country has:\",\n        options: [\n            { text: \"the longest coastline in the world\", isCorrect: true },\n            { text: \"the shortest coastline in the world\" },\n            { text: \"the highest mountain in the world\" },\n            { text: \"no access to sea\" },\n        ]\n    },\n    // {\n    //     code: \"Scotland\",\n    //     text: \"This country's national animal is:\",\n    //     options: [\n    //         { text: \"Mermaid\" },\n    //         { text: \"Dragon\" },\n    //         { text: \"Unicorn\", isCorrect: true },\n    //         { text: \"Hippogriff\" },\n    //     ]\n    // },\n    {\n        code: \"LK\",\n        text: \"This country originated:\",\n        options: [\n            { text: \"Arabica Coffee\" },\n            { text: \"Robusta Coffee\" },\n            { text: \"Ceylon Tea\", isCorrect: true },\n            { text: \"Rooibos van Zuid Afrika\" },\n        ]\n    },\n    {\n        code: \"RU\",\n        text: \"This country is officialy:\",\n        options: [\n            { text: \"the coldest in the world\", isCorrect: true },\n            { text: \"the smallest in the world\" },\n            { text: \"a Kingdom\" },\n            { text: \"two autonomies\" },\n        ]\n    },\n    {\n        code: \"NG\",\n        text: \"This country has the ...\",\n        options: [\n            { text: \"largest population in Africa\", isCorrect: true },\n            { text: \"smallest population in Africa\" },\n            { text: \"highest literacy rate in Africa\" },\n            { text: \"lowest GDP in Africa\" },\n        ]\n    },\n    {\n        code: \"GL\",\n        text: \"This country is also the ...\",\n        options: [\n            { text: \"smallest island in the world\" },\n            { text: \"7th miracle of the world\" },\n            { text: \"largest island in the world\", isCorrect: true },\n            { text: \"snowiest in the world\" },\n        ]\n    },\n    {\n        code: \"US\",\n        text: \"This country shares the ...\",\n        options: [\n            { text: \"name with two other countries\" },\n            { text: \"longest border in the world\", isCorrect: true },\n            { text: \"shortest border in the world\" },\n            { text: \"name with one other country\" },\n        ]\n    },\n    {\n        code: \"NP\",\n        text: \"This country features the ... in the world\",\n        options: [\n            { text: \"largest sea\" },\n            { text: \"highest mountain\", isCorrect: true },\n            { text: \"biggest forest\" },\n            { text: \"longest river\" },\n        ]\n    },\n    {\n        code: \"FM\",\n        text: \"This country is located in ...\",\n        options: [\n            { text: \"the largest ocean\", isCorrect: true },\n            { text: \"between two oceans\" },\n            { text: \"the biggest forest\" },\n            { text: \"one of the China Seas\" },\n        ]\n    },\n    {\n        code: \"NZ\",\n        text: \"This country was the ...\",\n        options: [\n            { text: \"birthplace of humankind\" },\n            { text: \"only country not fighting in World Wars\" },\n            { text: \"last country to be inhabited by humans\", isCorrect: true },\n            { text: \"East India Company main destination\" },\n        ]\n    },\n    {\n        code: \"MG\",\n        text: \"This country is the ... in the world\",\n        options: [\n            { text: \"most developed island nation\" },\n            { text: \"smallest island\" },\n            { text: \"largest micro-continent\", isCorrect: true },\n            { text: \"most isolated island\" },\n        ]\n    },\n    {\n        code: \"SC\",\n        text: \"The country comprises of ...\",\n        options: [\n            { text: \"tundra and forests\" },\n            { text: \"two disctricts\" },\n            { text: \"over 1000 islands\" },\n            { text: \"about 115 islands\", isCorrect: true },\n        ]\n    },\n    {\n        code: \"CN\",\n        text: \"How many timezones does this country have?\",\n        options: [\n            { text: \"7\" },\n            { text: \"none\" },\n            { text: \"6\" },\n            { text: \"1\", isCorrect: true },\n        ]\n    },\n    {\n        code: \"FI\",\n        text: \"What is the local name of this country?\",\n        options: [\n            { text: \"Svenska\" },\n            { text: \"Suomi\", isCorrect: true },\n            { text: \"საქართველო\" },\n            { text: \"Magyarország\" },\n        ]\n    },\n    {\n        code: \"MX\",\n        text: \"This country is home to ...\",\n        options: [\n            { text: \"world's largest pyramid\", isCorrect: true },\n            { text: \"most penguins of the world\" },\n            { text: \"less than 50 million people\" },\n            { text: \"the longest river in the world\" },\n        ]\n    },\n    {\n        code: \"LU\",\n        text: \"Nearly half of this country's workforce ...\",\n        options: [\n            { text: \"lives below poverty line\" },\n            { text: \"is employed in tourism\" },\n            { text: \"is under 18 years old\" },\n            { text: \"commutes from abroad\", isCorrect: true },\n        ]\n    },\n    {\n        code: \"ZW\",\n        text: \"World's largest waterfall, Victoria Falls, is on the borders of this country and ...\",\n        options: [\n            { text: \"Venezuela\" },\n            { text: \"Canada\" },\n            { text: \"Zambia\", isCorrect: true },\n            { text: \"Nigeria\" },\n        ]\n    },\n    {\n        code: \"ZM\",\n        text: \"This country was the first on its continent to introduce ...\",\n        options: [\n            { text: \"ship access to Gulf of Guinea\" },\n            { text: \"safe passage through Sahara\" },\n            { text: \"plastic banknotes\", isCorrect: true },\n            { text: \"taxes on coral reefs\" },\n        ]\n    },\n    {\n        code: \"VN\",\n        text: \"This country is the second biggest consumer of ...\",\n        options: [\n            { text: \"rice\", isCorrect: true },\n            { text: \"potato\" },\n            { text: \"coffee\" },\n            { text: \"tea\" },\n        ]\n    },\n    {\n        code: \"VE\",\n        text: \"Amerigo Vespucci named this country after ...\",\n        options: [\n            { text: \"Venice\", isCorrect: true },\n            { text: \"Verona\" },\n            { text: \"Valencia\" },\n            { text: \"Bergamo\" },\n        ]\n    },\n    {\n        code: \"VU\",\n        text: \"This country has the world's only ...\",\n        options: [\n            { text: \"Underwater cafe\" },\n            { text: \"Underwater phone booth\" },\n            { text: \"Underwater post office\", isCorrect: true },\n            { text: \"Underwater museum\" },\n        ]\n    },\n    {\n        code: \"SA\",\n        text: \"This country has the holiest site of ...\",\n        options: [\n            { text: \"Hinduism\" },\n            { text: \"Christianity\" },\n            { text: \"Islam\", isCorrect: true },\n            { text: \"Buddhism\" },\n        ]\n    },\n    {\n        code: \"TH\",\n        text: \"This country ...\",\n        options: [\n            { text: \"has the biggest amount of islands\" },\n            { text: \"was never colonized by Europe\", isCorrect: true },\n            { text: \"consumes most fast food in the Pacific\" },\n            { text: \"has the lowest point of the world\" },\n        ]\n    },\n    {\n        code: \"AS\",\n        text: \"This country ...\",\n        options: [\n            { text: \"has practically no wildlife\", isCorrect: true },\n            { text: \"was never in war\" },\n            { text: \"is the biggest producent of cocoa powder\" },\n            { text: \"is the biggest consumer of olive oil\" },\n        ]\n    },\n    {\n        code: \"AO\",\n        text: \"This has ...\",\n        options: [\n            { text: \"life expectancy of 84 years\" },\n            { text: \"built the largest and fastest plane\" },\n            { text: \"the largest market of sunflower seeds\" },\n            { text: \"had civil war for 27 years\", isCorrect: true },\n        ]\n    },\n    {\n        code: \"AD\",\n        text: \"This country has ...\",\n        options: [\n            { text: \"the highest capital in Europe\", isCorrect: true },\n            { text: \"the biggest population in Europe\" },\n            { text: \"the lowest point of Africa\" },\n            { text: \"the largest number of cashew trees\" },\n        ]\n    },\n    {\n        code: \"AR\",\n        text: \"This country is homeland of ...\",\n        options: [\n            { text: \"Lionel Messi\", isCorrect: true },\n            { text: \"Cristiano Ronaldo\" },\n            { text: \"David Beckham\" },\n            { text: \"Harry Kane\" },\n        ]\n    },\n    {\n        code: \"AZ\",\n        text: \"This country's famous national dish is ...\",\n        options: [\n            { text: \"Borscht\" },\n            { text: \"Ratatouille\" },\n            { text: \"Plov\", isCorrect: true },\n            { text: \"Moussaka\" },\n        ]\n    },\n    {\n        code: \"BB\",\n        text: \"... was born in this country.\",\n        options: [\n            { text: \"Adele\" },\n            { text: \"Lionel Messi\" },\n            { text: \"Rihanna\", isCorrect: true },\n            { text: \"Taylor Swift\" },\n        ]\n    },\n    {\n        code: \"BY\",\n        text: \"This country ...\",\n        options: [\n            { text: \"is rich in oil and diamonds\" },\n            { text: \"is the biggest country in Europe\" },\n            { text: \"applies death penalty\", isCorrect: true },\n            { text: \"has the highest death rate in Europe\" },\n        ]\n    }\n]\n\nexport function getHint(country) {\n    return hints.filter(hint => country.code === hint.code)[0];\n}\n","\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport { Button, KeyboardAvoidingView, StyleSheet, TextInput, View, Text } from 'react-native';\n\nimport { countriesWithFlags, countryList, searchCountry } from '../data/CountryList';\n\nimport { HeaderLeft, HeaderRight, HeaderTitle } from '../components/Header';\nimport Flag from './Flag';\nimport { GameOverCountryName, GlobeLink, ShareButton, GameOverMessage } from './GameOver';\nimport Guesses from './Guesses';\nimport Hearts from './Hearts';\nimport Autocomplete from './Autocomplete';\nimport { ExtraHearts, grantExtraHeart } from './ExtraHearts';\n\nimport { flushStorage, loadGlobalItem, loadItem, storeGlobalItem, storeItem } from '../util/DataStorage';\nimport { gameNumber } from '../util/GameNumber';\nimport refreshVersion from '../util/AppVersion';\nimport { navigateToBonusLevel1, navigateToLevel2 } from '../util/Navigation';\nimport { getBearingFromLatLon, getDistanceFromLatLonInKm } from '../util/DistanceCalculator';\nimport AwesomeAlert from 'react-native-awesome-alerts';\nimport { getHint } from '../data/Hints';\n\nexport default function GuessFlag({ navigation }) {\n\n    const [guess, setGuess] = useState(\"\");\n    const [autocompleteData, setAutocompleteData] = useState();\n    const [country, setCountry] = useState(countriesWithFlags[gameNumber]);\n    const [guesses, setGuesses] = useState([]);\n    const [hearts, setHearts] = useState();\n    const [extraHearts, setExtraHearts] = useState();\n    const [bonusLevelAvailable, setBonusLevelAvailable] = useState();\n    const [victory, setVictory] = useState();\n    const [bonusLevelVictory, setBonusLevelVictory] = useState();\n    const [level3Victory, setLevel3Victory] = useState();\n    const [showBonusLevelAlert, setShowBonusLevelAlert] = useState(false);\n\n    // Set up the level navigation header: title, next and previous level arrows\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"GEODLE\",\n            headerTitle: () => <HeaderTitle levelName={\"Level 1\"} />,\n            headerRight: () => (\n                <HeaderRight\n                    victory={victory}\n                    navigation={navigation}\n                    navigateToNextLevel={navigateToLevel2}\n                    hearts={hearts}\n                    setHearts={setHearts}\n                    extraHearts={extraHearts}\n                    setExtraHearts={setExtraHearts}\n                />\n            ),\n            headerLeft: () =>\n                <HeaderLeft\n                    navigation={navigation}\n                    bonusLevelAvailable={bonusLevelAvailable}\n                    navigateToBonusLevel={navigateToBonusLevel1}\n                    country={country}\n                    showGlobe={\n                        (hearts == 0 && extraHearts == 0)\n                        || level3Victory\n                    }\n                />\n        }, [navigation]);\n    })\n\n    useEffect(() => {\n        // Force app refresh every now and then to retire outdated code\n        refreshVersion();\n\n        // Bonus level \n        if ((victory || guesses?.length >= 3 && !bonusLevelAvailable)\n            && getHint(country) != null) {\n            setBonusLevelAvailable(true);\n        }\n    })\n\n    // Load guesses, hearts and such on startup and navigation\n    useEffect(() => {\n        const unsubscribe = navigation.addListener('focus', () => {\n            loadData();\n        });\n\n        return unsubscribe;\n    }, [navigation]);\n\n    const loadData = async () => {\n        loadItem(\"guesses\", [], setGuesses);\n        loadItem(\"level1Victory\", false, setVictory);\n        loadItem(\"bonusLevel1Victory\", false, setBonusLevelVictory);\n        loadItem(\"level3Victory\", false, setLevel3Victory);\n        loadItem(\"hearts\", 6, setHearts);\n        loadGlobalItem(\"extraHearts\", 0, setExtraHearts);\n    }\n\n    // Tester's \"refresh\" cheat\n    const onPressGEODLE = () => {\n        flushStorage();\n        window.location.reload(false);\n    }\n\n    // Store guesses, hearts and such on device\n    const storeData = async (guesses, hearts, victory, extraHearts) => {\n        storeItem(\"guesses\", guesses);\n        storeItem(\"hearts\", hearts);\n        storeGlobalItem(\"extraHearts\", extraHearts);\n        storeItem(\"level1Victory\", victory);\n    }\n\n    // Put a character or country name in the guess container, updating both guess and autocompleteData variables.\n    const enterGuess = (text) => {\n        setGuess(text);\n        if (text == \"\") {\n            setAutocompleteData();\n        } else {\n            setAutocompleteData(searchCountry(text));\n        }\n    }\n\n    // Process \"Guess\" button press\n    const onPressGuess = () => {\n        if (guess == \"bonus\") {\n            navigateToBonusLevel1(navigation);\n        } else if (guess) {\n            // Calculate distance and direction to the sought country\n            const currentGuess = countryList.filter(country => country.name == guess)[0];\n            if (currentGuess.lat) {\n                const distance = Math.floor(getDistanceFromLatLonInKm(currentGuess.lat, currentGuess.lon, country.lat, country.lon));\n                const bearing = getBearingFromLatLon(currentGuess.lat, currentGuess.lon, country.lat, country.lon);\n                guesses.push(\n                    {\n                        name: currentGuess.name,\n                        direction: distance == 0 ? '✓' : bearing,\n                        distance: distance + \" km\"\n                    });\n\n                // Register a try\n                const newVictory = country.name == currentGuess.name;\n                let newHearts = hearts;\n                if (!newVictory) {\n                    newHearts = hearts - 1;\n                    setHearts(newHearts);\n                }\n\n                // Check for bonus level\n                if (guesses.length == 3 && getHint(country) != null) {\n                    setTimeout(() => {\n                        setShowBonusLevelAlert(true);\n                    }, 1000)\n                }\n\n                // Process victory\n                if (newVictory) {\n                    setVictory(newVictory);\n                    var newExtraHearts = grantExtraHeart(extraHearts, setExtraHearts);\n\n                    if (getHint(country) != null) {\n                        // Redirect to bonus level\n                        setBonusLevelAvailable(true);\n                        setShowBonusLevelAlert(true);\n                    } else {\n                        // Redirect to the next level\n                        setTimeout(() => {\n                            navigateToLevel2(navigation);\n                        }, 1000)\n                    }\n                }\n\n                // Store the session data\n                storeData(guesses, newHearts, newVictory, newExtraHearts);\n            } else {\n                alert(currentGuess.name + \" does not have coordinates yet.\")\n            }\n        }\n\n        // Clear Guess field after the attempt\n        enterGuess(\"\");\n    }\n\n    return (\n        <KeyboardAvoidingView\n            style={styles.gameContainer}\n            behavior='padding'\n        >\n\n            {/* Flag */}\n            <Flag\n                flag={country.flag}\n                flagAspectRatio={country.flagAspectRatio}\n            />\n\n            {/* Hearts */}\n            <Hearts hearts={hearts} onPressHearts={onPressGEODLE} />\n            {hearts == 0 && extraHearts == 0 ?\n                <GameOverCountryName countryName={country.name} />\n                :\n                null\n            }\n\n            {/* Hint */}\n            {guesses == null || guesses.length == 0 ?\n                <View style={styles.hintContainer}>\n                    <Text style={styles.hintText}>Can you guess the country by its flag?</Text>\n                </View>\n                :\n                null\n            }\n\n            {/* Guesses */}\n            {guesses != null && guesses.length != 0 ?\n                <Guesses guesses={guesses} />\n                :\n                null\n            }\n\n            {/* Autocomplete */}\n            <Autocomplete autocompleteData={autocompleteData} enterGuess={enterGuess} />\n\n            {/* Guess input */}\n            {hearts > 0 && !victory ?\n                <View style={styles.inputContainer}>\n                    <TextInput\n                        style={styles.input}\n                        placeholder='Guess'\n                        value={guess}\n                        onChangeText={enterGuess}\n                    />\n                    <View style={styles.sendButtonContainer}>\n                        <Button\n                            title='Send'\n                            color={'black'}\n                            onPress={onPressGuess}\n                        />\n                    </View>\n                </View>\n                :\n                <GameOverMessage victory={victory} />\n            }\n\n\n            <AwesomeAlert\n                show={showBonusLevelAlert}\n                showProgress={false}\n                title=\"Bonus level\"\n                message=\"You unlocked a bonus level!\"\n                closeOnTouchOutside={false}\n                closeOnHardwareBackPress={false}\n                showCancelButton={true}\n                showConfirmButton={true}\n                cancelText=\"No, thanks\"\n                confirmText=\"Go there!\"\n                confirmButtonColor=\"green\"\n                onCancelPressed={() => {\n                    setShowBonusLevelAlert(false);\n                }}\n                onConfirmPressed={() => {\n                    navigateToBonusLevel1(navigation);\n                    setShowBonusLevelAlert(false);\n                }}\n            />\n\n        </KeyboardAvoidingView >\n    );\n}\n\nconst styles = StyleSheet.create({\n    rowContainer: {\n        flexDirection: 'row',\n    },\n\n    gameContainer: {\n        flex: 9,\n        alignItems: 'center',\n    },\n\n    // \"Guess\" input\n    inputContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        maxHeight: 50,\n        minHeight: 40,\n        justifyContent: 'center',\n        marginBottom: 20,\n        maxWidth: 330\n    },\n    input: {\n        flex: 8,\n        borderWidth: 1,\n        fontSize: 25,\n        maxWidth: '90%',\n    },\n\n    // Hint\n    hintContainer: {\n        flex: 9,\n        alignItems: 'center',\n    },\n    hintText: {\n        fontSize: 18\n    },\n\n    //  Send\n    sendButtonContainer: {\n        flex: 2,\n        minWidth: 60,\n        alignSelf: 'center',\n        paddingLeft: 5\n    },\n});\n","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\n\nimport GuessFlag from '../components/GuessFlag';\n\nexport default function GuessFlagScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <GuessFlag navigation={navigation} />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    maxWidth: 500,\n    alignSelf: 'center'\n  },\n});\n","import { useState, useEffect, useLayoutEffect } from 'react';\nimport { StyleSheet, View, Text, Image } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\n\nimport { countriesWithFlags, countriesWithShape } from '../data/CountryList';\nimport { gameNumber, generateConsistentRandomNumber } from '../util/GameNumber';\nimport Hearts from '../components/Hearts';\nimport { flushStorage, loadGlobalItem, loadItem, storeGlobalItem, storeItem } from '../util/DataStorage';\nimport { TouchableOpacity } from 'react-native-web';\nimport { GameOverMessage, ShareButton, GlobeLink } from '../components/GameOver';\nimport leftArrow from '../img/left-arrow.png'\nimport { navigateToLevel2 } from '../util/Navigation';\nimport refreshVersion from '../util/AppVersion';\nimport { ExtraHearts, grantExtraHeart } from '../components/ExtraHearts';\n\nexport default function GuessShapeScreen({ navigation }) {\n\n    const [country, setCountry] = useState(countriesWithFlags[gameNumber]);\n    const [hearts, setHearts] = useState();\n    const [extraHearts, setExtraHearts] = useState();\n    const [selected, setSelected] = useState(null);\n    const [guesses, setGuesses] = useState([]);\n    const [correct, setCorrect] = useState();\n    const [victory, setVictory] = useState(null);\n    const [shapes, setShapes] = useState(selectShapes());\n\n    function selectShapes() {\n        let shapes = [];\n\n        for (let i = 0; shapes.length < 9; i++) {\n            let countryShapeCandidate = countriesWithShape[generateConsistentRandomNumber(i, countriesWithShape.length)];\n            if (!shapes.includes(countryShapeCandidate)) {\n                shapes.push(countryShapeCandidate);\n            }\n        }\n\n        if (!shapes.includes(country)) {\n            shapes[generateConsistentRandomNumber(0, 9)] = country;\n        }\n\n        return shapes;\n    }\n\n    // Force app refresh every now and then to retire outdated code\n    useEffect(() => {\n        refreshVersion();\n    })\n\n    // Load hearts and such on startup\n    useEffect(() => {\n        loadData();\n    }, []);\n\n    const loadData = async () => {\n        loadItem(\"level3Guesses\", [], setGuesses);\n        loadItem(\"correct\", null, setCorrect);\n        loadGlobalItem(\"extraHearts\", 0, setExtraHearts);\n        loadItem(\"hearts\", 6, setHearts);\n        loadItem(\"level3Victory\", country.shape == null, setVictory); // the default value is a workaround to catch countries without shapes\n    }\n\n    useEffect(() => {\n        storeItem(\"level3Guesses\", guesses);\n        storeItem(\"correct\", correct);\n        storeGlobalItem(\"extraHearts\", extraHearts);\n        storeItem(\"hearts\", hearts);\n        storeItem(\"level3Victory\", victory);\n    }, [victory, hearts, extraHearts]);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: 'GEODLE\\n Level 3',\n            headerTitleStyle: {\n                fontWeight: 'bold',\n            },\n            headerBackButtonMenuEnabled: false,\n            headerTitle: () => <Text style={styles.headerTitle}>GEODLE{'\\n'} Level 3</Text>,\n            headerRight: () =>\n                <ExtraHearts\n                    hearts={hearts}\n                    setHearts={setHearts}\n                    extraHearts={extraHearts}\n                    setExtraHearts={setExtraHearts}\n                    victory={victory}\n                />,\n            headerLeft: () => (\n                <View style={styles.rowContainer}>\n                    <TouchableOpacity\n                        style={styles.nextLevelArrowContainer}\n                        onPress={() => navigateToLevel2(navigation)}\n                    >\n                        <Image\n                            style={styles.previousLevelArrow}\n                            source={leftArrow}\n                        />\n                        {hearts == 0 || victory\n                            ?\n                            <GlobeLink country={country} />\n                            : null\n                        }\n                        <ShareButton />\n                    </TouchableOpacity>\n                </View>\n            )\n        }, [navigation]);\n    })\n\n    function getShapeConditionalStyle(countryOnScreen) {\n        // Default inactive image\n        let style = [styles.shapeImage];\n\n        if (selected == countryOnScreen) {\n            // Highlighted upon selection\n            style.push(styles.selectedImage);\n        }\n\n        // Shape style after confirmation\n        if (correct == countryOnScreen.code) {\n            // Correct shape \n            style.push(styles.correctImage);\n        } else if (guesses.map(guess => guess.code).includes(countryOnScreen.code)) {\n            // Wrong shape \n            style.push(styles.wrongImage);\n        }\n        return style;\n    }\n\n    function Shape({ countryOnScreen }) {\n        return (\n            <TouchableOpacity style={styles.shapeContainer}\n                disabled={victory || hearts == 0}\n                onPress={() => {\n                    if (countryOnScreen == selected) {\n                        setSelected(null);\n                    } else if (!guesses.map(guess => guess.code).includes(countryOnScreen.code)) {\n                        setSelected(countryOnScreen);\n                    }\n                }}\n                onLongPress={() => {\n                    if (!guesses.map(guess => guess.code).includes(countryOnScreen.code)) {\n                        setSelected(countryOnScreen);\n                        if (countryOnScreen == country) {\n                            guesses.push({ code: countryOnScreen.code, result: \"✅\" });\n                            setCorrect(countryOnScreen.code);\n                            setVictory(true);\n                            grantExtraHeart(extraHearts, setExtraHearts);\n                        } else {\n                            guesses.push({ code: countryOnScreen.code, result: \"🟥\" });\n                            setHearts(hearts - 1);\n                            setSelected(null);\n                        }\n                    }\n                }}\n            >\n                <Image style={getShapeConditionalStyle(countryOnScreen)}\n                    source={countryOnScreen.shape}\n                    pointerEvents=\"none\"\n                />\n            </TouchableOpacity >\n        );\n    }\n\n    // Tester's \"refresh\" cheat\n    const onPressGEODLE = () => {\n        flushStorage();\n        window.location.reload(false);\n    }\n\n    return (\n        <View style={styles.container}>\n            <Hearts hearts={hearts} onPressHearts={onPressGEODLE} />\n\n            {(!victory && hearts > 0) || country.shape == null ?\n                < View style={styles.hintContainer}>\n                    {country.shape != null ?\n                        selected == null ?\n                            <Text style={styles.hintText}>Can you guess the shape of {country.name}?</Text>\n                            :\n                            <Text style={styles.hintText}>Long press to confirm</Text>\n                        :\n                        <View>\n                            <Text style={styles.hintText}>Sorry, the game doesn't have {country.name} shape yet.</Text>\n                        </View>\n                    }\n                </View>\n                :\n                null\n            }\n\n            <View style={styles.shapeListContainer}>\n                <Shape countryOnScreen={shapes[0]} />\n                <Shape countryOnScreen={shapes[1]} />\n                <Shape countryOnScreen={shapes[2]} />\n            </View>\n            <View style={styles.shapeListContainer}>\n                <Shape countryOnScreen={shapes[3]} />\n                <Shape countryOnScreen={shapes[4]} />\n                <Shape countryOnScreen={shapes[5]} />\n            </View>\n            <View style={styles.shapeListContainer}>\n                <Shape countryOnScreen={shapes[6]} />\n                <Shape countryOnScreen={shapes[7]} />\n                <Shape countryOnScreen={shapes[8]} />\n            </View>\n\n            {hearts == 0 || victory ?\n                <GameOverMessage victory={victory} />\n                :\n                null\n            }\n\n            <StatusBar style=\"auto\" />\n        </View >\n    );\n}\n\nconst styles = StyleSheet.create({\n    // Navigation header\n    headerTitle: {\n        fontWeight: 'bold',\n        fontSize: 18\n    },\n    nextLevelArrowContainer: {\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    nextLevelText: {\n        fontWeight: 'bold'\n    },\n    nextLevelArrow: {\n        flex: 1,\n        minHeight: 25,\n        aspectRatio: 512 / 512,\n        marginRight: 20,\n    },\n    previousLevelArrow: {\n        flex: 1,\n        minHeight: 25,\n        aspectRatio: 512 / 512,\n        marginLeft: 20,\n    },\n    rowContainer: {\n        flexDirection: 'row'\n    },\n\n    container: {\n        flex: 1,\n        width: '100%',\n        maxWidth: 500,\n        alignSelf: 'center'\n    },\n\n    // Hint\n    hintContainer: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    hintText: {\n        fontSize: 18\n    },\n\n    // Shapes\n    shapeListContainer: {\n        flex: 8,\n        alignSelf: 'center',\n        alignItems: 'center',\n        flexDirection: 'row',\n    },\n    shapeImage: {\n        width: 80,\n        height: 80,\n        aspectRatio: 512 / 512,\n        margin: 20\n    },\n    selectedImage: {\n        width: 120,\n        height: 120,\n        filter: 'invert(38%) sepia(97%) saturate(628%) hue-rotate(4deg) brightness(95%) contrast(101%)',\n    },\n    wrongImage: {\n        filter: 'invert(12%) sepia(93%) saturate(3011%) hue-rotate(352deg) brightness(92%) contrast(122%)',\n    },\n    correctImage: {\n        width: 120,\n        height: 120,\n        filter: 'invert(21%) sepia(92%) saturate(1173%) hue-rotate(91deg) brightness(103%) contrast(108%)',\n    }\n});\n","import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState, useLayoutEffect } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-web';\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nimport { countriesWithFlags } from '../data/CountryList';\nimport { getHint, hints } from '../data/Hints';\nimport { gameNumber } from '../util/GameNumber';\nimport Flag from '../components/Flag';\nimport { HeaderLeft, HeaderRight, HeaderTitle } from '../components/Header';\nimport { navigateToLevel1 } from '../util/Navigation';\nimport refreshVersion from '../util/AppVersion';\nimport { loadGlobalItem, loadItem, storeGlobalItem, storeItem } from '../util/DataStorage';\nimport { grantExtraHeart } from '../components/ExtraHearts';\n\n\nexport default function BonusLevelScreen({ navigation }) {\n\n    const [selected, setSelected] = useState();\n    const [showWelcomeAlert, setShowWelcomeAlert] = useState(true);\n    const [showExtraHeartAlert, setShowExtraHeartAlert] = useState(false);\n    const [country, setCountry] = useState(countriesWithFlags[gameNumber]);\n    const [guesses, setGuesses] = useState([]);\n    const [correct, setCorrect] = useState();\n    const [victory, setVictory] = useState(false);\n    const [level1Victory, setLevel1Victory] = useState();\n    const [extraHearts, setExtraHearts] = useState();\n\n    let hint = getHint(countriesWithFlags[gameNumber]);\n    if (hint == null) {\n        hint = hints[0];\n    }\n\n    // Force app refresh every now and then to retire outdated code\n    useEffect(() => {\n        refreshVersion();\n    })\n\n    // Load guesses, hearts and such on startup and navigation\n    useEffect(() => {\n        const unsubscribe = navigation.addListener('focus', () => {\n            loadData();\n        });\n\n        return unsubscribe;\n    }, [navigation]);\n\n    useEffect(() => {\n        if (victory == true) {\n            setCorrect(hint.options.filter((option) => option.isCorrect)[0].text);\n        }\n        if (victory == false && guesses == []) {\n            setShowWelcomeAlert(true);\n        }\n    }, [victory])\n\n    // Store guesses, hearts and such on device\n    const storeData = (newVictory, extraHearts, newGuesses, newCorrect) => {\n        storeItem(\"bonusLevel1Victory\", newVictory);\n        storeItem(\"bonusLevel1Guesses\", newGuesses);\n        storeItem(\"bonusLevel1Correct\", newCorrect);\n        storeGlobalItem(\"extraHearts\", extraHearts)\n    };\n\n    const loadData = async () => {\n        loadItem(\"level1Victory\", false, setLevel1Victory);\n        loadItem(\"bonusLevel1Victory\", false, setVictory);\n        loadItem(\"bonusLevel1Guesses\", [], setGuesses);\n        loadItem(\"bonusLevel1Correct\", null, setCorrect);\n        loadGlobalItem(\"extraHearts\", 0, setExtraHearts);\n    }\n    // Header\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"GEODLE\",\n            headerTitle: () => <HeaderTitle levelName={\"Bonus\"} />,\n            headerRight: () => <HeaderRight\n                victory={victory}\n                extraHearts={extraHearts}\n                setExtraHearts={setExtraHearts}\n            />,\n            headerLeft: () => <HeaderLeft country={country} navigation={navigation} navigateBack={navigateToLevel1} />\n        }, [navigation]);\n    })\n\n    function getConditionalOptionStyle(option) {\n        let style = [styles.optionContainer];\n        if (option == selected) {\n            style.push(styles.selectedOptionContainer);\n        } else if (option.text == correct) {\n            style.push(styles.correctOptionContainer);\n        } else if (guesses?.includes(option.text)) {\n            style.push(styles.wrongOptionContainer);\n        }\n        return style;\n    }\n\n    function Option({ option }) {\n        return (\n            <TouchableOpacity style={getConditionalOptionStyle(option)}\n                disabled={victory || correct != null || guesses.includes(option.text)}\n                onPress={() => {\n                    if (!guesses.includes(option.text)) {\n                        setSelected(option);\n                    }\n                }}\n                onLongPress={() => {\n                    var newVictory = option.isCorrect;\n                    setVictory(newVictory);\n                    let newExtraHearts = extraHearts;\n                    if (newVictory == true) {\n                        setShowExtraHeartAlert(true);\n                        newExtraHearts = grantExtraHeart(extraHearts, setExtraHearts);\n                    }\n                    guesses.push(option.text)\n                    let newCorrect = hint.options.filter(option => option.isCorrect)[0].text;\n                    setCorrect(newCorrect);\n                    storeData(newVictory, newExtraHearts, guesses, newCorrect);\n                    setSelected(null);\n\n                    // Redirect to the game\n                    setTimeout(() => {\n                        window.location.reload(false);\n                    }, 4000)\n                }}\n            >\n                <Text style={styles.optionText}>\n                    {option.text}\n                </Text>\n            </TouchableOpacity >\n        );\n    }\n\n\n    return (\n        <View style={styles.container}>\n\n            <Flag\n                flag={country.flag}\n                flagAspectRatio={country.flagAspectRatio}\n            />\n\n            <View style={styles.questionContainer}>\n                <Text style={styles.questionText}>{hint.text}</Text>\n            </View>\n\n            <View style={styles.optionsContainer}>\n                <View style={styles.optionsRowContainer}>\n                    <Option option={hint.options[0]} />\n                    <Option option={hint.options[1]} />\n                </View>\n                <View style={styles.optionsRowContainer}>\n                    <Option option={hint.options[2]} />\n                    <Option option={hint.options[3]} />\n                </View>\n\n                {selected != null ?\n                    <Text style={styles.hintText}>Long press to confirm</Text>\n                    :\n                    <View style={styles.hintText} />\n                }\n            </View>\n\n            <AwesomeAlert\n                show={showWelcomeAlert}\n                title=\"Bonus Level\"\n                message=\"You lose no hearts here, but have a chance to win one!\"\n                closeOnTouchOutside={true}\n                closeOnHardwareBackPress={true}\n                onDismiss={() => {\n                    setShowWelcomeAlert(false);\n                }}\n            />\n\n            <AwesomeAlert\n                show={showExtraHeartAlert}\n                title=\"Bonus Level\"\n                message=\"You won an extra heart!\"\n                closeOnTouchOutside={true}\n                closeOnHardwareBackPress={true}\n            />\n\n            <StatusBar style=\"auto\" />\n        </View >\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        maxWidth: 500,\n        alignSelf: 'center'\n    },\n\n    // Question\n    questionContainer: {\n        flex: 3,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    questionText: {\n        fontSize: 22\n    },\n\n    // Answers\n    optionsContainer: {\n        flex: 9,\n        justifyContent: 'flex-end'\n    },\n    optionsRowContainer: {\n        flexDirection: 'row',\n        marginVertical: 20,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    optionContainer: {\n        borderWidth: 1,\n        borderRadius: 10,\n        width: 170,\n        height: 50,\n        marginHorizontal: 10,\n        justifyContent: 'center',\n        textAlign: 'center',\n    },\n    selectedOptionContainer: {\n        backgroundColor: '#fc9d03'\n    },\n    correctOptionContainer: {\n        backgroundColor: '#35ad23'\n    },\n    wrongOptionContainer: {\n        backgroundColor: '#c24029'\n    },\n    optionText: {\n        fontSize: 18,\n        marginHorizontal: 5\n    },\n    hintText: {\n        alignSelf: 'center',\n        fontSize: 22,\n        minHeight: 26,\n        marginBottom: 18\n    }\n});\n","import { useEffect, useState } from 'react';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport GuessCapitalScreen from './screens/GuessCapitalScreen';\nimport GuessFlagScreen from './screens/GuessFlagScreen';\nimport GuessShapeScreen from './screens/GuessShapeScreen';\nimport BonusLevelScreen from './screens/BonusLevelScreen';\n\nimport { loadItem } from './util/DataStorage';\nimport { bonusLevel1Name, level1Name, level2Name, level3Name } from './util/Navigation';\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n\n  const [level1Victory, setLevel1Victory] = useState(null);\n  const [level2Victory, setLevel2Victory] = useState(null);\n\n  useEffect(() => {\n    loadItem(\"level1Victory\", false, setLevel1Victory);\n    loadItem(\"level2Victory\", false, setLevel2Victory);\n  }, []);\n\n  return level2Victory != null ? (\n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName={level1Victory ? level2Victory ? level3Name : level2Name : level1Name}\n        screenOptions={{\n          headerTitleAlign: 'center'\n        }}\n      >\n        <Stack.Screen\n          name={level1Name}\n          component={GuessFlagScreen}\n        />\n        <Stack.Screen\n          name={bonusLevel1Name}\n          component={BonusLevelScreen}\n        />\n        <Stack.Screen\n          name={level2Name}\n          component={GuessCapitalScreen}\n        />\n        <Stack.Screen\n          name={level3Name}\n          component={GuessShapeScreen}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n    : null\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/geodle/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [41], () => (__webpack_require__(71749)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["maxHearts","Hearts","_ref","hearts","onPressHearts","_jsxs","TouchableOpacity","onPress","style","styles","heartsContainer","children","_jsx","Image","heartImage","source","heart","lostHeart","StyleSheet","create","flex","alignSelf","flexDirection","justifyContent","marginTop","minWidth","minHeight","maxHeight","maxWidth","aspectRatio","countryList","code","name","lat","lon","shape","require","flag","flagAspectRatio","emoji","capital","icon","countriesWithShape","filter","country","countriesWithFlags","gameNumber","generateConsistentRandomNumber","hash","limit","today","Date","firstHash","getDate","getMonth","secondHash","i","length","charCodeAt","datePrefix","loadItem","item","fallback","setterToCall","itemFromStorage","_regeneratorRuntime","_context","prev","next","AsyncStorage","getItem","sent","abrupt","JSON","parse","t0","console","log","stop","Promise","loadGlobalItem","_context2","storeItem","value","_context3","setItem","stringify","storeGlobalItem","_context4","flushStorage","_context5","clear","coordNamesToSmileys","coord","smiley","GameOverCountryName","countryName","Text","gameOver","toUpperCase","GameOverMessage","_ref2","victory","View","onPressShare","shareString","level1Guesses","level1Victory","level2Guesses","level2Victory","level3Guesses","level3Victory","heartsUsed","_loop","_iterator","_step","guess","_iterator2","_step2","_guess","_iterator3","_step3","_guess2","guessesFromStorage","victoryFromStorage","entry","direction","_createForOfIteratorHelperLoose","done","result","Clipboard","setStringAsync","alert","onPressGoogleMaps","Linking","openURL","GlobeLink","_ref4","pictogram","globeButton","ShareButton","shareButton","lastRefreshed","fontSize","fontWeight","margin","linksContainer","marginHorizontal","marginRight","extraHeartsText","setLastRefreshed","lastRefreshedFromStorage","now","minutesSinceRefresh","Math","ceil","window","location","reload","level1Name","bonusLevel1Name","level2Name","level3Name","navigateToLevel1","navigation","navigate","navigateToBonusLevel1","navigateToLevel2","navigateToLevel3","grantExtraHeart","extraHearts","setExtraHearts","newExtraHearts","ExtraHearts","setHearts","disabled","extraHeart","HeaderTitle","levelName","headerTitle","HeaderLeft","navigateBack","bonusLevelAvailable","navigateToBonusLevel","showGlobe","rowContainer","BonusLevelArrow","goBack","navigationArrowContainer","previousLevelArrow","leftArrow","HeaderRight","_ref3","navigateToNextLevel","NextLevelArrow","nextLevelText","nextLevelArrow","rightArrow","_ref5","bonus","marginLeft","textAlign","alignItems","GuessCapitalScreen","_country$capital","defaultCountry","defaultIcon","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","correctCharacters","setCorrectCharacters","_useState11","_useState12","almostCharacters","setAlmostCharacters","_useState13","_useState14","wrongCharacters","setWrongCharacters","_useState15","_useState16","setVictory","_useState17","_useState18","setLevel2Guesses","_useState19","_useState20","char1","setChar1","_useState21","_useState22","char2","setChar2","_useState23","_useState24","char3","setChar3","_useState25","_useState26","char4","setChar4","_useState27","_useState28","char5","setChar5","_useState29","_useState30","char6","setChar6","_useState31","_useState32","char7","setChar7","_useState33","_useState34","char8","setChar8","_useState35","_useState36","char9","setChar9","_useState37","_useState38","char10","setChar10","_useState39","_useState40","char11","setChar11","_useState41","_useState42","char12","setChar12","_useState43","_useState44","char13","setChar13","_useState45","_useState46","char14","setChar14","_useState47","_useState48","char15","setChar15","_useState49","_useState50","char16","setChar16","_useState51","_useState52","char17","setChar17","_useState53","_useState54","char1Guessed","setChar1Guessed","_useState55","_useState56","char2Guessed","setChar2Guessed","_useState57","_useState58","char3Guessed","setChar3Guessed","_useState59","_useState60","char4Guessed","setChar4Guessed","_useState61","_useState62","char5Guessed","setChar5Guessed","_useState63","_useState64","char6Guessed","setChar6Guessed","_useState65","_useState66","char7Guessed","setChar7Guessed","_useState67","_useState68","char8Guessed","setChar8Guessed","_useState69","_useState70","char9Guessed","setChar9Guessed","_useState71","_useState72","char10Guessed","setChar10Guessed","_useState73","_useState74","char11Guessed","setChar11Guessed","_useState75","_useState76","char12Guessed","setChar12Guessed","_useState77","_useState78","char13Guessed","setChar13Guessed","_useState79","_useState80","char14Guessed","setChar14Guessed","_useState81","_useState82","char15Guessed","setChar15Guessed","_useState83","_useState84","char16Guessed","setChar16Guessed","_useState85","_useState86","charArray","char","setChar","charGuessed","setCharGuessed","setCharArray","newCharArray","capitalName","charAt","Header","useLayoutEffect","setOptions","title","headerTitleStyle","headerBackButtonMenuEnabled","headerRight","headerLeft","useEffect","refreshVersion","onKeyboardPress","includes","isCharacterGuessedInAllOccurrences","isKeyEnabled","areAllCharactersGuessed","replaceAll","onPressGuess","character","oldCorrect","_toConsumableArray","oldAlmost","charIndex","charSetter","charGuessedSetter","push","indexOf","setTimeout","onPressWordChar","index","split","correct","getConditionalKeyboardStyles","almost","wrong","getConditionalWordStyles","conditionalWordStyles","wordCharacterSpace","wordCharacterContainer","container","resizeMode","hintContainer","hintText","wordContainer","wordCharacter","keyboardContainer","keyboardRowContainer","keyboardCharacterContainer","keyboardCharacter","wideCharacter","onKeyboardPressBack","guessButtonContainer","guessButton","StatusBar","nextLevelArrowContainer","width","marginBottom","flexWrap","height","borderWidth","paddingBottom","keyboardSpaceContainer","backgroundColor","gameOverContainer","Flag","Guesses","guesses","guessesContainer","FlatList","data","renderItem","guessContainer","guessName","guessDirection","guessDistance","distance","keyExtractor","toString","guessFlag","Autocomplete","autocompleteData","enterGuess","inputWithAutocompleteContainer","autocompleteContainer","autocompleteItem","keyboardShouldPersistTaps","gameContainer","padding","inputContainer","input","sendButtonContainer","paddingLeft","coordNames","mapWidth","mapHeight","deg2rad","deg","PI","latLonToXY","latitude","longitude","x","latRad","mercN","tan","hints","text","options","isCorrect","getHint","hint","GuessFlag","setGuess","setAutocompleteData","setGuesses","setBonusLevelAvailable","setBonusLevelVictory","setLevel3Victory","showBonusLevelAlert","setShowBonusLevelAlert","addListener","loadData","toLowerCase","sort","left","right","startsWith","localeCompare","searchCountry","KeyboardAvoidingView","behavior","TextInput","placeholder","onChangeText","Button","color","currentGuess","floor","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","getDistanceFromLatLonInKm","bearing","_latLonToXY","_latLonToXY2","x1","y1","_latLonToXY3","_latLonToXY4","x2","y2","abs","compassReading","coordIndex","round","getBearingFromLatLon","newVictory","newHearts","storeData","AwesomeAlert","show","showProgress","message","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","cancelText","confirmText","confirmButtonColor","onCancelPressed","onConfirmPressed","GuessFlagScreen","GuessShapeScreen","selected","setSelected","setCorrect","shapes","countryShapeCandidate","selectShapes","getShapeConditionalStyle","countryOnScreen","shapeImage","selectedImage","correctImage","map","wrongImage","Shape","shapeContainer","onLongPress","pointerEvents","shapeListContainer","BonusLevelScreen","showWelcomeAlert","setShowWelcomeAlert","showExtraHeartAlert","setShowExtraHeartAlert","setLevel1Victory","option","getConditionalOptionStyle","optionContainer","selectedOptionContainer","correctOptionContainer","wrongOptionContainer","Option","newCorrect","newGuesses","optionText","questionContainer","questionText","optionsContainer","optionsRowContainer","onDismiss","marginVertical","borderRadius","Stack","createNativeStackNavigator","App","setLevel2Victory","NavigationContainer","Navigator","initialRouteName","screenOptions","headerTitleAlign","Screen","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","current","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}